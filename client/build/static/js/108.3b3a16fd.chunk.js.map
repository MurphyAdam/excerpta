{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-perl6.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","Perl6HighlightRules","hex","token","regex","num_rat","num_with_","complex_numbers","booleans","versions","lang_keywords","this","createKeywordMapper","variables","vars_special","ops_char","constants_unicode","qstrings","regexp","$rules","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","lineStartOnly","getNextLineIndent","state","tab","tokens","getTokenizer","getLineTokens","type","$id"],"mappings":"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","file":"static/js/108.3b3a16fd.chunk.js","sourcesContent":["ace.define(\"ace/mode/perl6_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar Perl6HighlightRules = function() {\n\n    var keywords = (\n        \"my|our|class|role|grammar|is|does|sub|method|submethod|try|\" +\n        \"default|when|if|elsif|else|unless|with|orwith|without|for|given|proceed|\" +\n        \"succeed|loop|while|until|repeat|module|use|need|import|require|unit|\" +\n        \"constant|enum|multi|return|has|token|rule|make|made|proto|state|augment|\" +\n        \"but|anon|supersede|let|subset|gather|returns|return-rw|temp|\" +\n        \"BEGIN|CHECK|INIT|END|CLOSE|ENTER|LEAVE|KEEP|UNDO|PRE|POST|FIRST|NEXT|LAST|CATCH|CONTROL|QUIT|DOC\"\n    );\n\n    var types = (\n        \"Any|Array|Associative|AST|atomicint|Attribute|Backtrace|Backtrace::Frame|\" +\n        \"Bag|Baggy|BagHash|Blob|Block|Bool|Buf|Callable|CallFrame|Cancellation|\" +\n        \"Capture|Channel|Code|compiler|Complex|ComplexStr|Cool|CurrentThreadScheduler|\" +\n        \"Cursor|Date|Dateish|DateTime|Distro|Duration|Encoding|Exception|Failure|\"+\n        \"FatRat|Grammar|Hash|HyperWhatever|Instant|Int|IntStr|IO|IO::ArgFiles|\"+\n        \"IO::CatHandle|IO::Handle|IO::Notification|IO::Path|IO::Path::Cygwin|\"+\n        \"IO::Path::QNX|IO::Path::Unix|IO::Path::Win32|IO::Pipe|IO::Socket|\"+\n        \"IO::Socket::Async|IO::Socket::INET|IO::Spec|IO::Spec::Cygwin|IO::Spec::QNX|\"+\n        \"IO::Spec::Unix|IO::Spec::Win32|IO::Special|Iterable|Iterator|Junction|Kernel|\"+\n        \"Label|List|Lock|Lock::Async|Macro|Map|Match|Metamodel::AttributeContainer|\"+\n        \"Metamodel::C3MRO|Metamodel::ClassHOW|Metamodel::EnumHOW|Metamodel::Finalization|\"+\n        \"Metamodel::MethodContainer|Metamodel::MROBasedMethodDispatch|Metamodel::MultipleInheritance|\"+\n        \"Metamodel::Naming|Metamodel::Primitives|Metamodel::PrivateMethodContainer|\"+\n        \"Metamodel::RoleContainer|Metamodel::Trusting|Method|Mix|MixHash|Mixy|Mu|\"+\n        \"NFC|NFD|NFKC|NFKD|Nil|Num|Numeric|NumStr|ObjAt|Order|Pair|Parameter|Perl|\"+\n        \"Pod::Block|Pod::Block::Code|Pod::Block::Comment|Pod::Block::Declarator|\"+\n        \"Pod::Block::Named|Pod::Block::Para|Pod::Block::Table|Pod::Heading|Pod::Item|\"+\n        \"Positional|PositionalBindFailover|Proc|Proc::Async|Promise|Proxy|PseudoStash|\"+\n        \"QuantHash|Range|Rat|Rational|RatStr|Real|Regex|Routine|Scalar|Scheduler|\"+\n        \"Semaphore|Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|StrDistance|Stringy|\"+\n        \"Sub|Submethod|Supplier|Supplier::Preserving|Supply|Systemic|Tap|Telemetry|\"+\n        \"Telemetry::Instrument::Thread|Telemetry::Instrument::Usage|Telemetry::Period|\"+\n        \"Telemetry::Sampler|Thread|ThreadPoolScheduler|UInt|Uni|utf8|Variable|Version|\"+\n        \"VM|Whatever|WhateverCode|WrapHandle|int|uint|num|str|\"+\n        \"int8|int16|int32|int64|uint8|uint16|uint32|uint64|long|longlong|num32|num64|size_t|bool|CArray|Pointer|\"+\n\t\t\"Backtrace|Backtrace::Frame|Exception|Failure|X::AdHoc|X::Anon::Augment|X::Anon::Multi|\"+\n\t\t\"X::Assignment::RO|X::Attribute::NoPackage|X::Attribute::Package|X::Attribute::Undeclared|\"+\n\t\t\"X::Augment::NoSuchType|X::Bind|X::Bind::NativeType|X::Bind::Slice|X::Caller::NotDynamic|\"+\n\t\t\"X::Channel::ReceiveOnClosed|X::Channel::SendOnClosed|X::Comp|X::Composition::NotComposable|\"+\n\t\t\"X::Constructor::Positional|X::ControlFlow|X::ControlFlow::Return|X::DateTime::TimezoneClash|\"+\n\t\t\"X::Declaration::Scope|X::Declaration::Scope::Multi|X::Does::TypeObject|X::Eval::NoSuchLang|\"+\n\t\t\"X::Export::NameClash|X::IO|X::IO::Chdir|X::IO::Chmod|X::IO::Copy|X::IO::Cwd|X::IO::Dir|\"+\n\t\t\"X::IO::DoesNotExist|X::IO::Link|X::IO::Mkdir|X::IO::Move|X::IO::Rename|X::IO::Rmdir|X::IO::Symlink|\"+\n\t\t\"X::IO::Unlink|X::Inheritance::NotComposed|X::Inheritance::Unsupported|X::Method::InvalidQualifier|\"+\n\t\t\"X::Method::NotFound|X::Method::Private::Permission|X::Method::Private::Unqualified|\"+\n\t\t\"X::Mixin::NotComposable|X::NYI|X::NoDispatcher|X::Numeric::Real|X::OS|X::Obsolete|X::OutOfRange|\"+\n\t\t\"X::Package::Stubbed|X::Parameter::Default|X::Parameter::MultipleTypeConstraints|\"+\n\t\t\"X::Parameter::Placeholder|X::Parameter::Twigil|X::Parameter::WrongOrder|X::Phaser::Multiple|\"+\n\t\t\"X::Phaser::PrePost|X::Placeholder::Block|X::Placeholder::Mainline|X::Pod|X::Proc::Async|\"+\n\t\t\"X::Proc::Async::AlreadyStarted|X::Proc::Async::CharsOrBytes|X::Proc::Async::MustBeStarted|\"+\n\t\t\"X::Proc::Async::OpenForWriting|X::Proc::Async::TapBeforeSpawn|X::Proc::Unsuccessful|\"+\n\t\t\"X::Promise::CauseOnlyValidOnBroken|X::Promise::Vowed|X::Redeclaration|X::Role::Initialization|\"+\n\t\t\"X::Seq::Consumed|X::Sequence::Deduction|X::Signature::NameClash|X::Signature::Placeholder|\"+\n\t\t\"X::Str::Numeric|X::StubCode|X::Syntax|X::Syntax::Augment::WithoutMonkeyTyping|\"+\n\t\t\"X::Syntax::Comment::Embedded|X::Syntax::Confused|X::Syntax::InfixInTermPosition|\"+\n\t\t\"X::Syntax::Malformed|X::Syntax::Missing|X::Syntax::NegatedPair|X::Syntax::NoSelf|\"+\n\t\t\"X::Syntax::Number::RadixOutOfRange|X::Syntax::P5|X::Syntax::Regex::Adverb|\"+\n\t\t\"X::Syntax::Regex::SolitaryQuantifier|X::Syntax::Reserved|X::Syntax::Self::WithoutObject|\"+\n\t\t\"X::Syntax::Signature::InvocantMarker|X::Syntax::Term::MissingInitializer|X::Syntax::UnlessElse|\"+\n\t\t\"X::Syntax::Variable::Match|X::Syntax::Variable::Numeric|X::Syntax::Variable::Twigil|X::Temporal|\"+\n\t\t\"X::Temporal::InvalidFormat|X::TypeCheck|X::TypeCheck::Assignment|X::TypeCheck::Binding|\"+\n\t\t\"X::TypeCheck::Return|X::TypeCheck::Splice|X::Undeclared\"\n\t\t);\n\n    var builtinFunctions = (\n        \"abs|abs2rel|absolute|accept|ACCEPTS|accessed|acos|acosec|acosech|acosh|\"+\n        \"acotan|acotanh|acquire|act|action|actions|add|add_attribute|add_enum_value|\"+\n        \"add_fallback|add_method|add_parent|add_private_method|add_role|add_trustee|\"+\n        \"adverb|after|all|allocate|allof|allowed|alternative-names|annotations|antipair|\"+\n        \"antipairs|any|anyof|app_lifetime|append|arch|archname|args|arity|asec|asech|\"+\n        \"asin|asinh|ASSIGN-KEY|ASSIGN-POS|assuming|ast|at|atan|atan2|atanh|AT-KEY|\"+\n        \"atomic-assign|atomic-dec-fetch|atomic-fetch|atomic-fetch-add|atomic-fetch-dec|\"+\n        \"atomic-fetch-inc|atomic-fetch-sub|atomic-inc-fetch|AT-POS|attributes|auth|await|\"+\n        \"backtrace|Bag|BagHash|base|basename|base-repeating|batch|BIND-KEY|BIND-POS|\"+\n        \"bind-stderr|bind-stdin|bind-stdout|bind-udp|bits|bless|block|bool-only|\"+\n        \"bounds|break|Bridge|broken|BUILD|build-date|bytes|cache|callframe|calling-package|\"+\n        \"CALL-ME|callsame|callwith|can|cancel|candidates|cando|canonpath|caps|caption|\"+\n        \"Capture|cas|catdir|categorize|categorize-list|catfile|catpath|cause|ceiling|\"+\n        \"cglobal|changed|Channel|chars|chdir|child|child-name|child-typename|chmod|chomp|\"+\n        \"chop|chr|chrs|chunks|cis|classify|classify-list|cleanup|clone|close|closed|\"+\n        \"close-stdin|code|codes|collate|column|comb|combinations|command|comment|\"+\n        \"compiler|Complex|compose|compose_type|composer|condition|config|configure_destroy|\"+\n        \"configure_type_checking|conj|connect|constraints|construct|contains|contents|copy|\"+\n        \"cos|cosec|cosech|cosh|cotan|cotanh|count|count-only|cpu-cores|cpu-usage|CREATE|\"+\n        \"create_type|cross|cue|curdir|curupdir|d|Date|DateTime|day|daycount|day-of-month|\"+\n        \"day-of-week|day-of-year|days-in-month|declaration|decode|decoder|deepmap|\"+\n        \"defined|DEFINITE|delayed|DELETE-KEY|DELETE-POS|denominator|desc|DESTROY|destroyers|\"+\n        \"devnull|did-you-mean|die|dir|dirname|dir-sep|DISTROnames|do|done|duckmap|dynamic|\"+\n        \"e|eager|earlier|elems|emit|enclosing|encode|encoder|encoding|end|ends-with|enum_from_value|\"+\n        \"enum_value_list|enum_values|enums|eof|EVAL|EVALFILE|exception|excludes-max|excludes-min|\"+\n        \"EXISTS-KEY|EXISTS-POS|exit|exitcode|exp|expected|explicitly-manage|expmod|extension|f|\"+\n        \"fail|fc|feature|file|filename|find_method|find_method_qualified|finish|first|flat|flatmap|\"+\n        \"flip|floor|flush|fmt|format|formatter|freeze|from|from-list|from-loop|from-posix|full|\"+\n        \"full-barrier|get|get_value|getc|gist|got|grab|grabpairs|grep|handle|handled|handles|\"+\n        \"hardware|has_accessor|head|headers|hh-mm-ss|hidden|hides|hour|how|hyper|id|illegal|\"+\n        \"im|in|indent|index|indices|indir|infinite|infix|install_method_cache|\"+\n        \"Instant|instead|int-bounds|interval|in-timezone|invalid-str|invert|invocant|IO|\"+\n        \"IO::Notification.watch-path|is_trusted|is_type|isa|is-absolute|is-hidden|is-initial-thread|\"+\n        \"is-int|is-lazy|is-leap-year|isNaN|is-prime|is-relative|is-routine|is-setting|is-win|item|\"+\n        \"iterator|join|keep|kept|KERNELnames|key|keyof|keys|kill|kv|kxxv|l|lang|last|lastcall|later|\"+\n        \"lazy|lc|leading|level|line|lines|link|listen|live|local|lock|log|log10|lookup|lsb|\"+\n        \"MAIN|match|max|maxpairs|merge|message|method_table|methods|migrate|min|minmax|\"+\n        \"minpairs|minute|misplaced|Mix|MixHash|mkdir|mode|modified|month|move|mro|msb|multiness|\"+\n        \"name|named|named_names|narrow|nativecast|native-descriptor|nativesizeof|new|new_type|\"+\n        \"new-from-daycount|new-from-pairs|next|nextcallee|next-handle|nextsame|nextwith|NFC|NFD|\"+\n        \"NFKC|NFKD|nl-in|nl-out|nodemap|none|norm|not|note|now|nude|numerator|Numeric|of|\"+\n        \"offset|offset-in-hours|offset-in-minutes|old|on-close|one|on-switch|open|opened|\"+\n        \"operation|optional|ord|ords|orig|os-error|osname|out-buffer|pack|package|package-kind|\"+\n        \"package-name|packages|pair|pairs|pairup|parameter|params|parent|parent-name|parents|parse|\"+\n        \"parse-base|parsefile|parse-names|parts|path|path-sep|payload|peer-host|peer-port|periods|\"+\n        \"perl|permutations|phaser|pick|pickpairs|pid|placeholder|plus|polar|poll|polymod|pop|pos|\"+\n        \"positional|posix|postfix|postmatch|precomp-ext|precomp-target|pred|prefix|prematch|prepend|\"+\n        \"print|printf|print-nl|print-to|private|private_method_table|proc|produce|Promise|prompt|\"+\n        \"protect|pull-one|push|push-all|push-at-least|push-exactly|push-until-lazy|put|\"+\n        \"qualifier-type|quit|r|race|radix|rand|range|raw|re|read|readchars|readonly|\"+\n        \"ready|Real|reallocate|reals|reason|rebless|receive|recv|redispatcher|redo|reduce|\"+\n        \"rel2abs|relative|release|rename|repeated|replacement|report|reserved|resolve|\"+\n        \"restore|result|resume|rethrow|reverse|right|rindex|rmdir|roles_to_compose|\"+\n        \"rolish|roll|rootdir|roots|rotate|rotor|round|roundrobin|routine-type|run|rwx|s|\"+\n        \"samecase|samemark|samewith|say|schedule-on|scheduler|scope|sec|sech|second|seek|\"+\n        \"self|send|Set|set_hidden|set_name|set_package|set_rw|set_value|SetHash|\"+\n        \"set-instruments|setup_finalization|shape|share|shell|shift|sibling|sigil|\"+\n        \"sign|signal|signals|signature|sin|sinh|sink|sink-all|skip|skip-at-least|\"+\n        \"skip-at-least-pull-one|skip-one|sleep|sleep-timer|sleep-until|Slip|slurp|\"+\n        \"slurp-rest|slurpy|snap|snapper|so|socket-host|socket-port|sort|source|\"+\n        \"source-package|spawn|SPEC|splice|split|splitdir|splitpath|sprintf|spurt|\"+\n        \"sqrt|squish|srand|stable|start|started|starts-with|status|stderr|stdout|\"+\n        \"sub_signature|subbuf|subbuf-rw|subname|subparse|subst|subst-mutate|\"+\n        \"substr|substr-eq|substr-rw|succ|sum|Supply|symlink|t|tail|take|take-rw|\"+\n        \"tan|tanh|tap|target|target-name|tc|tclc|tell|then|throttle|throw|timezone|\"+\n        \"tmpdir|to|today|toggle|to-posix|total|trailing|trans|tree|trim|trim-leading|\"+\n        \"trim-trailing|truncate|truncated-to|trusts|try_acquire|trying|twigil|type|\"+\n        \"type_captures|typename|uc|udp|uncaught_handler|unimatch|uniname|uninames|\"+\n        \"uniparse|uniprop|uniprops|unique|unival|univals|unlink|unlock|unpack|unpolar|\"+\n        \"unshift|unwrap|updir|USAGE|utc|val|value|values|VAR|variable|verbose-config|\"+\n        \"version|VMnames|volume|vow|w|wait|warn|watch|watch-path|week|weekday-of-month|\"+\n        \"week-number|week-year|WHAT|WHERE|WHEREFORE|WHICH|WHO|whole-second|WHY|\"+\n        \"wordcase|words|workaround|wrap|write|write-to|yada|year|yield|yyyy-mm-dd|\"+\n        \"z|zip|zip-latest|\"+\n        \"plan|done-testing|bail-out|todo|skip|skip-rest|diag|subtest|pass|flunk|ok|\"+\n        \"nok|cmp-ok|is-deeply|isnt|is-approx|like|unlike|use-ok|isa-ok|does-ok|\"+\n        \"can-ok|dies-ok|lives-ok|eval-dies-ok|eval-lives-ok|throws-like|fails-like|\"+\n\t\t\"rw|required|native|repr|export|symbol\"\n\t);\n\tvar constants_ascii = (\"pi|Inf|tau|time\");\n\t\n\tvar ops_txt = (\"eq|ne|gt|lt|le|ge|div|gcd|lcm|leg|cmp|ff|fff|\"+\n\t\t\"x|before|after|Z|X|and|or|andthen|notandthen|orelse|xor\"\n\t);\n\n\tvar keywordMapper = this.createKeywordMapper({\n\t\t\"keyword\": keywords,\n\t\t\"storage.type\" : types,\n\t\t\"constant.language\": constants_ascii,\n\t\t\"support.function\": builtinFunctions,\n\t\t\"keyword.operator\": ops_txt\n\t}, \"identifier\");\n\t\n\tvar moduleName = \"[a-zA-Z_][a-zA-Z_0-9:-]*\\\\b\";\n\tvar hex = {\ttoken : \"constant.numeric\", regex : \"0x[0-9a-fA-F]+\\\\b\" };\n\tvar num_rat = { token : \"constant.numeric\", regex : \"[+-.]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\" };\n\tvar num_with_ = { token : \"constant.numeric\", regex : \"(?:\\\\d+_?\\\\d+)+\\\\b\" };\n\tvar complex_numbers = { token : \"constant.numeric\", regex : \"\\\\+?\\\\d+i\\\\b\" };\n\tvar booleans = { token : \"constant.language.boolean\", regex : \"(?:True|False)\\\\b\" };\n\tvar versions = { token : \"constant.other\", regex : \"v[0-9](?:\\\\.[a-zA-Z0-9*])*\\\\b\" };\n\tvar lang_keywords = { token : keywordMapper, regex : \"[a-zA-Z][\\\\:a-zA-Z0-9_-]*\\\\b\" };\n\tvar variables = { token : \"variable.language\", regex : \"[$@%&][?*!.]?[a-zA-Z0-9_-]+\\\\b\" };\n\tvar vars_special = { token: \"variable.language\", regex : \"\\\\$[/|!]?|@\\\\$/\" };\n\tvar ops_char = { token : \"keyword.operator\", regex : \"=|<|>|\\\\+|\\\\*|-|/|~|%|\\\\?|!|\\\\^|\\\\.|\\\\:|\\\\,|\"+\n\t\"»|«|\\\\||\\\\&|⚛|∘\" };\n\tvar constants_unicode = { token : \"constant.language\", regex : \"𝑒|π|τ|∞\" };\n\tvar qstrings = { token : \"string.quoted.single\", regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\" };\n\tvar word_quoting = { token : \"string.quoted.single\", regex : \"[<](?:[a-zA-Z0-9 ])*[>]\"};\n\tvar regexp = {\n\t\t\t\ttoken : \"string.regexp\",\n\t\t\t\tregex : \"[m|rx]?[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\" };\n\t\n\t\n\tthis.$rules = {\n\t\t\"start\" : [\n\t\t\t{\n\t\t\t\ttoken : \"comment.block\", // Embedded Comments - Parentheses\n\t\t\t\tregex : \"#[`|=]\\\\(.*\\\\)\"\n\t\t\t}, {\n\t\t\t\ttoken : \"comment.block\", // Embedded Comments - Brackets\n\t\t\t\tregex : \"#[`|=]\\\\[.*\\\\]\"\n\t\t\t}, {\n\t\t\t\ttoken : \"comment.doc\", // Multiline Comments\n\t\t\t\tregex : \"^=(?:begin)\\\\b\",\n\t\t\t\tnext : \"block_comment\"\n\t\t\t}, {\n\t\t\t\ttoken : \"string.unquoted\", // q Heredocs\n\t\t\t\tregex : \"q[x|w]?\\\\:to/END/;\",\n\t\t\t\tnext : \"qheredoc\"\n\t\t\t}, {\n\t\t\t\ttoken : \"string.unquoted\", // qq Heredocs\n\t\t\t\tregex : \"qq[x|w]?\\\\:to/END/;\",\n\t\t\t\tnext : \"qqheredoc\"\n\t\t\t},\n\t\t\tregexp,\n\t\t\tqstrings\n\t\t\t, {\n\t\t\t\ttoken : \"string.quoted.double\", // Double Quoted String\n\t\t\t\tregex : '\"',\n\t\t\t\tnext : \"qqstring\"\n\t\t\t},\n\t\t\tword_quoting\n\t\t\t, {\n\t\t\t\ttoken: [\"keyword\", \"text\", \"variable.module\"], // use - Module Names, Pragmas, etc.\n\t\t\t\tregex: \"(use)(\\\\s+)((?:\"+moduleName+\"\\\\.?)*)\"\n\t\t\t},\n\t\t\thex,\n\t\t\tnum_rat,\n\t\t\tnum_with_,\n\t\t\tcomplex_numbers,\n\t\t\tbooleans,\n\t\t\tversions,\n\t\t\tlang_keywords,\n\t\t\tvariables,\n\t\t\tvars_special,\n\t\t\tops_char,\n\t\t\tconstants_unicode\n\t\t\t, {\n\t\t\t\ttoken : \"comment\", // Sigle Line Comments\n\t\t\t\tregex : \"#.*$\"\n\t\t\t}, {\n\t\t\t\ttoken : \"lparen\",\n\t\t\t\tregex : \"[[({]\"\n\t\t\t}, {\n\t\t\t\ttoken : \"rparen\",\n\t\t\t\tregex : \"[\\\\])}]\"\n\t\t\t}, {\n\t\t\t\ttoken : \"text\",\n\t\t\t\tregex : \"\\\\s+\"\n\t\t\t}\n\t\t],\n\t\t\"qqstring\" : [\n\t\t\t{\n\t\t\t\ttoken : \"constant.language.escape\",\n\t\t\t\tregex : '\\\\\\\\(?:[nrtef\\\\\\\\\"$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})'\n\t\t\t}, \n\t\t\tvariables,\n\t\t\tvars_special\n\t\t\t, {\n\t\t\t\ttoken : \"lparen\",\n\t\t\t\tregex : \"{\",\n\t\t\t\tnext : \"qqinterpolation\"\n\t\t\t}, {\n\t\t\t\ttoken : \"string.quoted.double\", \n\t\t\t\tregex : '\"', \n\t\t\t\tnext : \"start\"\n\t\t\t}, {\n\t\t\t\tdefaultToken : \"string.quoted.double\"\n\t\t\t}\n\t\t],\n\t\t\"qqinterpolation\" : [\n\t\t\thex,\n\t\t\tnum_rat,\n\t\t\tnum_with_,\n\t\t\tcomplex_numbers,\n\t\t\tbooleans,\n\t\t\tversions,\n\t\t\tlang_keywords,\n\t\t\tvariables,\n\t\t\tvars_special,\n\t\t\tops_char,\n\t\t\tconstants_unicode,\n\t\t\tqstrings,\n\t\t\tregexp,\n\t\t\t\n\t\t\t{\n\t\t\t\ttoken: \"rparen\",\n\t\t\t\tregex: \"}\",\n\t\t\t\tnext : \"qqstring\"\n\t\t\t}\n\t\t],\n\t\t\"block_comment\": [\n\t\t\t{\n\t\t\t\ttoken: \"comment.doc\",\n\t\t\t\tregex: \"^=end +[a-zA-Z_0-9]*\",\n\t\t\t\tnext: \"start\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tdefaultToken: \"comment.doc\"\n\t\t\t}\n\t\t],\n\t\t\"qheredoc\": [\n\t\t\t{\n\t\t\t\ttoken: \"string.unquoted\",\n\t\t\t\tregex: \"END$\",\n\t\t\t\tnext: \"start\"\n\t\t\t}, {\n\t\t\t\tdefaultToken: \"string.unquoted\"\n\t\t\t}\n\t\t],\n\t\t\"qqheredoc\": [\n\t\t\tvariables,\n\t\t\tvars_special,\n\t\t\t{\n\t\t\t\ttoken : \"lparen\",\n\t\t\t\tregex : \"{\",\n\t\t\t\tnext : \"qqheredocinterpolation\"\n\t\t\t}, {\n\t\t\t\ttoken: \"string.unquoted\",\n\t\t\t\tregex: \"END$\",\n\t\t\t\tnext: \"start\"\n\t\t\t}, {\n\t\t\t\tdefaultToken: \"string.unquoted\"\n\t\t\t}\n\t\t],\n\t\t\"qqheredocinterpolation\" : [\n\t\t\thex,\n\t\t\tnum_rat,\n\t\t\tnum_with_,\n\t\t\tcomplex_numbers,\n\t\t\tbooleans,\n\t\t\tversions,\n\t\t\tlang_keywords,\n\t\t\tvariables,\n\t\t\tvars_special,\n\t\t\tops_char,\n\t\t\tconstants_unicode,\n\t\t\tqstrings,\n\t\t\tregexp,\n\t\t\t{\n\t\t\t\ttoken: \"rparen\",\n\t\t\t\tregex: \"}\",\n\t\t\t\tnext : \"qqheredoc\"\n\t\t\t}\n\t\t]\n\t};\n};\n\noop.inherits(Perl6HighlightRules, TextHighlightRules);\n\nexports.Perl6HighlightRules = Perl6HighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/perl6\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/perl6_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar Perl6HighlightRules = require(\"./perl6_highlight_rules\").Perl6HighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = Perl6HighlightRules;\n\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode({start: \"^=(begin)\\\\b\", end: \"^=(end)\\\\b\"});\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"#\";\n    this.blockComment = [\n        {start: \"=begin\", end: \"=end\", lineStartOnly: true},\n        {start: \"=item\", end: \"=end\", lineStartOnly: true}\n    ];\n\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/perl6\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/perl6\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}