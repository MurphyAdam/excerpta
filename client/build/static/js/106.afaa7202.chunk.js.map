{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-pascal.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","PascalHighlightRules","keywordMapper","this","createKeywordMapper","$rules","start","caseInsensitive","token","regex","push","next","defaultToken","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","end","$id","m"],"mappings":"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","file":"static/js/106.afaa7202.chunk.js","sourcesContent":["ace.define(\"ace/mode/pascal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PascalHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control\": \"absolute|abstract|all|and|and_then|array|as|asm|attribute|begin|bindable|case|class\" +\n            \"|const|constructor|destructor|div|do|do|else|end|except|export|exports|external|far|file|finalization\" +\n            \"|finally|for|forward|goto|if|implementation|import|in|inherited|initialization|interface|interrupt|is\" +\n            \"|label|library|mod|module|name|near|nil|not|object|of|only|operator|or|or_else|otherwise|packed|pow|private\" +\n            \"|program|property|protected|public|published|qualified|record|repeat|resident|restricted|segment|set|shl|shr\" +\n            \"|then|to|try|type|unit|until|uses|value|var|view|virtual|while|with|xor\"\n    }, \"identifier\", true);\n\n    this.$rules = {\n        start: [{\n                caseInsensitive: true,\n                token: ['variable', \"text\",\n                    'storage.type.prototype',\n                    'entity.name.function.prototype'\n                ],\n                regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?(?=(?:\\\\(.*?\\\\))?;\\\\s*(?:attribute|forward|external))'\n            }, {\n                caseInsensitive: true,\n                token: ['variable', \"text\", 'storage.type.function', 'entity.name.function'],\n                regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?'\n            }, {\n                caseInsensitive: true,\n                token: keywordMapper,\n                regex: /\\b[a-z_]+\\b/\n            }, {\n                token: 'constant.numeric',\n                regex: '\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b'\n            }, {\n                token: 'punctuation.definition.comment',\n                regex: '--.*$'\n            }, {\n                token: 'punctuation.definition.comment',\n                regex: '//.*$'\n            }, {\n                token: 'punctuation.definition.comment',\n                regex: '\\\\(\\\\*',\n                push: [{\n                        token: 'punctuation.definition.comment',\n                        regex: '\\\\*\\\\)',\n                        next: 'pop'\n                    },\n                    { defaultToken: 'comment.block.one' }\n                ]\n            }, {\n                token: 'punctuation.definition.comment',\n                regex: '\\\\{',\n                push: [{\n                        token: 'punctuation.definition.comment',\n                        regex: '\\\\}',\n                        next: 'pop'\n                    },\n                    { defaultToken: 'comment.block.two' }\n                ]\n            }, {\n                token: 'punctuation.definition.string.begin',\n                regex: '\"',\n                push: [{ token: 'constant.character.escape', regex: '\\\\\\\\.' },\n                    {\n                        token: 'punctuation.definition.string.end',\n                        regex: '\"',\n                        next: 'pop'\n                    },\n                    { defaultToken: 'string.quoted.double' }\n                ]\n            }, {\n                token: 'punctuation.definition.string.begin',\n                regex: '\\'',\n                push: [{\n                        token: 'constant.character.escape.apostrophe',\n                        regex: '\\'\\''\n                    },\n                    {\n                        token: 'punctuation.definition.string.end',\n                        regex: '\\'',\n                        next: 'pop'\n                    },\n                    { defaultToken: 'string.quoted.single' }\n                ]\n            }, {\n                token: 'keyword.operator',\n                regex: '[+\\\\-;,/*%]|:=|='\n            }\n        ]\n    };\n\n    this.normalizeRules();\n};\n\noop.inherits(PascalHighlightRules, TextHighlightRules);\n\nexports.PascalHighlightRules = PascalHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/pascal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/pascal_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PascalHighlightRules = require(\"./pascal_highlight_rules\").PascalHighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PascalHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n       \n    this.lineCommentStart = [\"--\", \"//\"];\n    this.blockComment = [\n        {start: \"(*\", end: \"*)\"},\n        {start: \"{\", end: \"}\"}\n    ];\n    \n    this.$id = \"ace/mode/pascal\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/pascal\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}