{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-gherkin.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","stringEscape","GherkinHighlightRules","languages","name","labels","keywords","map","l","join","this","$rules","start","token","regex","next","defaultToken","normalizeRules","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","match","length","type","call","prototype","m"],"mappings":"2FAAAA,gBAAIC,OAAO,mCAAmC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAASC,EAASC,GAEvJ,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBACvDC,EAAgB,kFAEhBC,EAAwB,WACxB,IAAIC,EAAY,CAAC,CACbC,KAAM,KACNC,OAAQ,oDACRC,SAAU,4BAGVD,EAASF,EAAUI,KAAI,SAASC,GAChC,OAAOA,EAAEH,UACVI,KAAK,KACJH,EAAWH,EAAUI,KAAI,SAASC,GAClC,OAAOA,EAAEF,YACVG,KAAK,KACRC,KAAKC,OAAS,CACVC,MAAQ,CAAC,CACLC,MAAO,mBACPC,MAAO,2BACR,CACCD,MAAQ,UACRC,MAAQ,QACT,CACCD,MAAQ,UACRC,MAAQ,MAAQT,EAAS,SAAWC,EAAW,QAChD,CACCO,MAAQ,UACRC,MAAQ,OACT,CACCD,MAAQ,SACRC,MAAQ,OACRC,KAAO,aACR,CACCF,MAAQ,SACRC,MAAQ,IACRC,KAAO,YACR,CACCF,MAAQ,OACRC,MAAQ,kBACRC,KAAO,CAAC,CACJF,MAAQ,OACRC,MAAQ,QACT,CACCD,MAAQ,qBACRC,MAAQ,WACT,CACCD,MAAQ,QACRC,MAAQ,GACRC,KAAO,WAEZ,CACCF,MAAQ,UACRC,MAAQ,WACT,CACCD,MAAQ,UACRC,MAAQ,WACRC,KAAO,cACR,CACCF,MAAQ,UACRC,MAAQ,OACRC,KAAO,UAEX,UAAc,CAAE,CACZF,MAAQ,2BACRC,MAAQb,GACT,CACCY,MAAQ,SACRC,MAAQ,OACRC,KAAO,SACR,CACCC,aAAe,WAEnB,SAAa,CAAC,CACVH,MAAQ,2BACRC,MAAQb,GACT,CACCY,MAAQ,SACRC,MAAQ,QACRC,KAAQ,YACT,CACCF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,SACT,CACCC,aAAc,WAElB,aAAe,CAAC,CACZH,MAAQ,UACRC,MAAQ,IACRC,KAAO,SACR,CACCF,MAAQ,UACRC,MAAQ,MACT,CACCD,MAAQ,SACRC,MAAQ,OACT,CACCE,aAAe,YAGvBN,KAAKO,kBAGTlB,EAAImB,SAAShB,EAAuBF,GAEpCH,EAAQK,sBAAwBA,KAGhCR,IAAIC,OAAO,mBAAmB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,qCAAqC,SAASC,EAASC,EAASC,GAE1J,IAAIC,EAAMH,EAAQ,cACduB,EAAWvB,EAAQ,UAAUwB,KAC7BlB,EAAwBN,EAAQ,6BAA6BM,sBAE7DkB,EAAO,WACPV,KAAKW,eAAiBnB,EACtBQ,KAAKY,WAAaZ,KAAKa,mBAE3BxB,EAAImB,SAASE,EAAMD,GAEnB,WACIT,KAAKc,iBAAmB,IACxBd,KAAKe,IAAM,mBAEXf,KAAKgB,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASpB,KAAKqB,WAAWH,GAIzBI,EADgBtB,KAAKuB,eAAeC,cAAcN,EAAMD,GACjCK,OAM3B,OAJGJ,EAAKO,MAAM,aACVL,GAAU,MAGVE,EAAOI,QAA0C,WAAhCJ,EAAOA,EAAOI,OAAO,GAAGC,MAKhC,SAATV,IACIC,EAAKO,MAAM,qDAELP,EAAKO,MAAM,gCADjBL,GAhBK,KAmBCF,EAAKO,MAAM,WACjBL,GAAU,OAVPA,IAiBhBQ,KAAKlB,EAAKmB,WAEb1C,EAAQuB,KAAOA,KAEK1B,IAAIE,QAAQ,CAAC,qBAAqB,SAAS4C,GACwB1C,IAC3DA,EAAOD,QAAU2C,Q","file":"static/js/48.48186cb1.chunk.js","sourcesContent":["ace.define(\"ace/mode/gherkin_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar stringEscape =  \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n\nvar GherkinHighlightRules = function() {\n    var languages = [{\n        name: \"en\",\n        labels: \"Feature|Background|Scenario(?: Outline)?|Examples\",\n        keywords: \"Given|When|Then|And|But\"\n    }];\n    \n    var labels = languages.map(function(l) {\n        return l.labels;\n    }).join(\"|\");\n    var keywords = languages.map(function(l) {\n        return l.keywords;\n    }).join(\"|\");\n    this.$rules = {\n        start : [{\n            token: \"constant.numeric\",\n            regex: \"(?:(?:[1-9]\\\\d*)|(?:0))\"\n        }, {\n            token : \"comment\",\n            regex : \"#.*$\"\n        }, {\n            token : \"keyword\",\n            regex : \"(?:\" + labels + \"):|(?:\" + keywords + \")\\\\b\"\n        }, {\n            token : \"keyword\",\n            regex : \"\\\\*\"\n        }, {\n            token : \"string\",           // multi line \"\"\" string start\n            regex : '\"{3}',\n            next : \"qqstring3\"\n        }, {\n            token : \"string\",           // \" string\n            regex : '\"',\n            next : \"qqstring\"\n        }, {\n            token : \"text\",\n            regex : \"^\\\\s*(?=@[\\\\w])\",\n            next : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : \"variable.parameter\",\n                regex : \"@[\\\\w]+\"\n            }, {\n                token : \"empty\",\n                regex : \"\",\n                next : \"start\"\n            }]\n        }, {\n            token : \"comment\",\n            regex : \"<[^>]+>\"\n        }, {\n            token : \"comment\",\n            regex : \"\\\\|(?=.)\",\n            next : \"table-item\"\n        }, {\n            token : \"comment\",\n            regex : \"\\\\|$\",\n            next : \"start\"\n        }],\n        \"qqstring3\" : [ {\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\", // multi line \"\"\" string end\n            regex : '\"{3}',\n            next : \"start\"\n        }, {\n            defaultToken : \"string\"\n        }],\n        \"qqstring\" : [{\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"table-item\" : [{\n            token : \"comment\",\n            regex : /$/,\n            next : \"start\"\n        }, {\n            token : \"comment\",\n            regex : /\\|/\n        }, {\n            token : \"string\",\n            regex : /\\\\./\n        }, {\n            defaultToken : \"string\"\n        }]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(GherkinHighlightRules, TextHighlightRules);\n\nexports.GherkinHighlightRules = GherkinHighlightRules;\n});\n\nace.define(\"ace/mode/gherkin\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/gherkin_highlight_rules\"], function(require, exports, module) {\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar GherkinHighlightRules = require(\"./gherkin_highlight_rules\").GherkinHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = GherkinHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gherkin\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var space2 = \"  \";\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        \n        if(line.match(\"[ ]*\\\\|\")) {\n            indent += \"| \";\n        }\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n        \n\n        if (state == \"start\") {\n            if (line.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")) {\n                indent += space2;\n            } else if(line.match(\"(Given|Then).+(:)$|Examples:\")) {\n                indent += space2;\n            } else if(line.match(\"\\\\*.+\")) {\n                indent += \"* \";\n            } \n        }\n        \n\n        return indent;\n    };\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/gherkin\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}