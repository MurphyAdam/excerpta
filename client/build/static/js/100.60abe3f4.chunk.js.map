{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-nim.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","NimHighlightRules","keywordMapper","this","createKeywordMapper","floatNumber","identifier","$rules","token","regex","next","include","defaultToken","push","blockComment","docBlockComment","math","methods","strings","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","nestable","$id"],"mappings":"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","file":"static/js/100.60abe3f4.chunk.js","sourcesContent":["ace.define(\"ace/mode/nim_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar NimHighlightRules = function () {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable\": \"var|let|const\",\n        \"keyword\": \"assert|parallel|spawn|export|include|from|template|mixin|bind|import|concept|raise|defer|try|finally|except|converter|proc|func|macro|method|and|or|not|xor|shl|shr|div|mod|in|notin|is|isnot|of|static|if|elif|else|case|of|discard|when|return|yield|block|break|while|echo|continue|asm|using|cast|addr|unsafeAddr|type|ref|ptr|do|declared|defined|definedInScope|compiles|sizeOf|is|shallowCopy|getAst|astToStr|spawn|procCall|for|iterator|as\",\n        \"storage.type\": \"newSeq|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|char|bool|string|set|pointer|float32|float64|enum|object|cstring|array|seq|openArray|varargs|UncheckedArray|tuple|set|distinct|void|auto|openarray|range\",\n        \"support.function\": \"lock|ze|toU8|toU16|toU32|ord|low|len|high|add|pop|contains|card|incl|excl|dealloc|inc\",\n        \"constant.language\": \"nil|true|false\"\n    }, \"identifier\");\n\n    var hexNumber = \"(?:0[xX][\\\\dA-Fa-f][\\\\dA-Fa-f_]*)\";\n    var decNumber = \"(?:[0-9][\\\\d_]*)\";\n    var octNumber = \"(?:0o[0-7][0-7_]*)\";\n    var binNumber = \"(?:0[bB][01][01_]*)\";\n    var intNumber = \"(?:\" + hexNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'?[iIuU](?:8|16|32|64)|u)?\\\\b\";\n    var exponent = \"(?:[eE][+-]?[\\\\d][\\\\d_]*)\";\n    var floatNumber = \"(?:[\\\\d][\\\\d_]*(?:[.][\\\\d](?:[\\\\d_]*)\" + exponent + \"?)|\" + exponent + \")\";\n    var floatNumberExt = \"(?:\" + hexNumber + \"(?:'(?:(?:[fF](?:32|64)?)|[dD])))|(?:\" + floatNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'(?:(?:[fF](?:32|64)?)|[dD]))\";\n    var stringEscape = \"\\\\\\\\([abeprcnlftv\\\\\\\"']|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    var identifier = '[a-zA-Z][a-zA-Z0-9_]*';\n    this.$rules = {\n        \"start\": [{\n            token: [\"identifier\", \"keyword.operator\", \"support.function\"],\n            regex: \"(\" + identifier + \")([.]{1})(\" + identifier + \")(?=\\\\()\"\n        }, {//pragmas\n            token: \"paren.lparen\",\n            regex: \"(\\\\{\\\\.)\",\n            next: [{\n                token: \"paren.rparen\",\n                regex: '(\\\\.\\\\}|\\\\})',\n                next: \"start\"\n            }, {\n                include: \"methods\"\n            }, {\n                token: \"identifier\",\n                regex: identifier\n            }, {\n                token: \"punctuation\",\n                regex: /[,]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /[=:.]/\n            }, {\n                token: \"paren.lparen\",\n                regex: /[[(]/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])]/\n            }, {\n                include: \"math\"\n            }, {\n                include: \"strings\"\n            }, {\n                defaultToken: \"text\"\n            }]\n        }, {\n            token: \"comment.doc.start\",\n            regex: /##\\[(?!])/,\n            push: \"docBlockComment\"\n        }, {\n            token: \"comment.start\",\n            regex: /#\\[(?!])/,\n            push: \"blockComment\"\n        }, {\n            token: \"comment.doc\",\n            regex: '##.*$'\n        }, {\n            token: \"comment\",\n            regex: '#.*$'\n        }, {\n            include: \"strings\"\n        }, {// character\n            token: \"string\",\n            regex: \"'(?:\\\\\\\\(?:[abercnlftv]|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})|.{1})?'\"\n        }, {\n            include: \"methods\"\n        }, {\n            token: keywordMapper,\n            regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n        }, {\n            token: [\"keyword.operator\", \"text\", \"storage.type\"],\n            regex: \"([:])(\\\\s+)(\" + identifier + \")(?=$|\\\\)|\\\\[|,|\\\\s+=|;|\\\\s+\\\\{)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: /\\[\\.|{\\||\\(\\.|\\[:|[[({`]/\n        }, {\n            token: \"paren.rparen\",\n            regex: /\\.\\)|\\|}|\\.]|[\\])}]/\n        }, {\n            token: \"keyword.operator\",\n            regex: /[=+\\-*\\/<>@$~&%|!?^.:\\\\]/\n        }, {\n            token: \"punctuation\",\n            regex: /[,;]/\n        }, {\n            include: \"math\"\n        }],\n        blockComment: [{\n            regex: /#\\[]/,\n            token: \"comment\"\n        }, {\n            regex: /#\\[(?!])/,\n            token: \"comment.start\",\n            push: \"blockComment\"\n        }, {\n            regex: /]#/,\n            token: \"comment.end\",\n            next: \"pop\"\n        }, {\n            defaultToken: \"comment\"\n        }],\n        docBlockComment: [{\n            regex: /##\\[]/,\n            token: \"comment.doc\"\n        }, {\n            regex: /##\\[(?!])/,\n            token: \"comment.doc.start\",\n            push: \"docBlockComment\"\n        }, {\n            regex: /]##/,\n            token: \"comment.doc.end\",\n            next: \"pop\"\n        }, {\n            defaultToken: \"comment.doc\"\n        }],\n        math: [{\n            token: \"constant.float\",\n            regex: floatNumberExt\n        }, {\n            token: \"constant.float\",\n            regex: floatNumber\n        }, {\n            token: \"constant.integer\",\n            regex: intNumber\n        }],\n        methods: [{\n            token: \"support.function\",\n            regex: \"(\\\\w+)(?=\\\\()\"\n        }],\n        strings: [{\n            token: \"string\",\n            regex: '(\\\\b' + identifier + ')?\"\"\"',\n            push: [{\n                token: \"string\",\n                regex: '\"\"\"',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token: \"string\",\n            regex: \"\\\\b\" + identifier + '\"(?=.)',\n            push: [{\n                token: \"string\",\n                regex: '\"|$',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token: \"string\",\n            regex: '\"',\n            push: [{\n                token: \"string\",\n                regex: '\"|$',\n                next: \"pop\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                defaultToken: \"string\"\n            }]\n        }]\n    };\n    this.normalizeRules();\n};\n\n\noop.inherits(NimHighlightRules, TextHighlightRules);\n\nexports.NimHighlightRules = NimHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/nim\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/nim_highlight_rules\",\"ace/mode/folding/cstyle\"], function (require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar NimHighlightRules = require(\"./nim_highlight_rules\").NimHighlightRules;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function () {\n    TextMode.call(this);\n    this.HighlightRules = NimHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\n\noop.inherits(Mode, TextMode);\n\n\n(function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = {start: \"#[\", end: \"]#\", nestable: true};\n\n\n    this.$id = \"ace/mode/nim\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/nim\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}