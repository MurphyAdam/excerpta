{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-cirru.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","CirruHighlightRules","this","$rules","start","token","regex","next","comment","string","escape","line","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","CoffeeFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","m"],"mappings":"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","file":"static/js/16.80567e3c.chunk.js","sourcesContent":["ace.define(\"ace/mode/cirru_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CirruHighlightRules = function() {\n    this.$rules = {\n        start: [{\n            token: 'constant.numeric',\n            regex: /[\\d\\.]+/\n        }, {\n            token: 'comment.line.double-dash',\n            regex: /--/,\n            next: 'comment'\n        }, {\n            token: 'storage.modifier',\n            regex: /\\(/\n        }, {\n            token: 'storage.modifier',\n            regex: /,/,\n            next: 'line'\n        }, {\n            token: 'support.function',\n            regex: /[^\\(\\)\"\\s{}\\[\\]]+/,\n            next: 'line'\n        }, {\n            token: 'string.quoted.double',\n            regex: /\"/,\n            next: 'string'\n        }, {\n            token: 'storage.modifier',\n            regex: /\\)/\n        }],\n        comment: [{\n            token: 'comment.line.double-dash',\n            regex: / +[^\\n]+/,\n            next: 'start'\n        }],\n        string: [{\n            token: 'string.quoted.double',\n            regex: /\"/,\n            next: 'line'\n        }, {\n            token: 'constant.character.escape',\n            regex: /\\\\/,\n            next: 'escape'\n        }, {\n            token: 'string.quoted.double',\n            regex: /[^\\\\\"]+/\n        }],\n        escape: [{\n            token: 'constant.character.escape',\n            regex: /./,\n            next: 'string'\n        }],\n        line: [{\n            token: 'constant.numeric',\n            regex: /[\\d\\.]+/\n        }, {\n            token: 'markup.raw',\n            regex: /^\\s*/,\n            next: 'start'\n        }, {\n            token: 'storage.modifier',\n            regex: /\\$/,\n            next: 'start'\n        }, {\n            token: 'variable.parameter',\n            regex: /[^\\(\\)\"\\s{}\\[\\]]+/\n        }, {\n            token: 'storage.modifier',\n            regex: /\\(/,\n            next: 'start'\n        }, {\n            token: 'storage.modifier',\n            regex: /\\)/\n        }, {\n            token: 'markup.raw',\n            regex: /^ */,\n            next: 'start'\n        }, {\n            token: 'string.quoted.double',\n            regex: /\"/,\n            next: 'string'\n        }]\n    };\n\n};\n\noop.inherits(CirruHighlightRules, TextHighlightRules);\n\nexports.CirruHighlightRules = CirruHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/cirru\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/cirru_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar CirruHighlightRules = require(\"./cirru_highlight_rules\").CirruHighlightRules;\nvar CoffeeFoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = CirruHighlightRules;\n    this.foldingRules = new CoffeeFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/cirru\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/cirru\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}