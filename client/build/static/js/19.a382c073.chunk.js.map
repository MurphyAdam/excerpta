{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-coffee.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","CoffeeHighlightRules","identifier","illegal","keywordMapper","this","createKeywordMapper","functionRule","token","regex","source","stringEscape","$rules","start","stateName","next","defaultToken","push","onMatch","val","state","stack","length","unshift","shift","indexOf","concat","heregex","comment","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","getFoldWidgetRange","session","foldStyle","range","indentationBlock","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","Rules","Outdent","TextMode","Mode","WorkerClient","HighlightRules","$outdent","foldingRules","indenter","lineCommentStart","blockComment","end","getNextLineIndent","tab","tokens","getTokenizer","getLineTokens","type","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","snippetFileId","m"],"mappings":"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","file":"static/js/19.a382c073.chunk.js","sourcesContent":["ace.define(\"ace/mode/coffee_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\n    var oop = require(\"../lib/oop\");\n    var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n    oop.inherits(CoffeeHighlightRules, TextHighlightRules);\n\n    function CoffeeHighlightRules() {\n        var identifier = \"[$A-Za-z_\\\\x7f-\\\\uffff][$\\\\w\\\\x7f-\\\\uffff]*\";\n\n        var keywords = (\n            \"this|throw|then|try|typeof|super|switch|return|break|by|continue|\" +\n            \"catch|class|in|instanceof|is|isnt|if|else|extends|for|own|\" +\n            \"finally|function|while|when|new|no|not|delete|debugger|do|loop|of|off|\" +\n            \"or|on|unless|until|and|yes|yield|export|import|default\"\n        );\n\n        var langConstant = (\n            \"true|false|null|undefined|NaN|Infinity\"\n        );\n\n        var illegal = (\n            \"case|const|function|var|void|with|enum|implements|\" +\n            \"interface|let|package|private|protected|public|static\"\n        );\n\n        var supportClass = (\n            \"Array|Boolean|Date|Function|Number|Object|RegExp|ReferenceError|String|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" +\n            \"SyntaxError|TypeError|URIError|\"  +\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray\"\n        );\n\n        var supportFunction = (\n            \"Math|JSON|isNaN|isFinite|parseInt|parseFloat|encodeURI|\" +\n            \"encodeURIComponent|decodeURI|decodeURIComponent|String|\"\n        );\n\n        var variableLanguage = (\n            \"window|arguments|prototype|document\"\n        );\n\n        var keywordMapper = this.createKeywordMapper({\n            \"keyword\": keywords,\n            \"constant.language\": langConstant,\n            \"invalid.illegal\": illegal,\n            \"language.support.class\": supportClass,\n            \"language.support.function\": supportFunction,\n            \"variable.language\": variableLanguage\n        }, \"identifier\");\n\n        var functionRule = {\n            token: [\"paren.lparen\", \"variable.parameter\", \"paren.rparen\", \"text\", \"storage.type\"],\n            regex: /(?:(\\()((?:\"[^\")]*?\"|'[^')]*?'|\\/[^\\/)]*?\\/|[^()\"'\\/])*?)(\\))(\\s*))?([\\-=]>)/.source\n        };\n\n        var stringEscape = /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)/;\n\n        this.$rules = {\n            start : [\n                {\n                    token : \"constant.numeric\",\n                    regex : \"(?:0x[\\\\da-fA-F]+|(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?)\"\n                }, {\n                    stateName: \"qdoc\",\n                    token : \"string\", regex : \"'''\", next : [\n                        {token : \"string\", regex : \"'''\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qqdoc\",\n                    token : \"string\",\n                    regex : '\"\"\"',\n                    next : [\n                        {token : \"string\", regex : '\"\"\"', next : \"start\"},\n                        {token : \"paren.string\", regex : '#{', push : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qstring\",\n                    token : \"string\", regex : \"'\", next : [\n                        {token : \"string\", regex : \"'\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qqstring\",\n                    token : \"string.start\", regex : '\"', next : [\n                        {token : \"string.end\", regex : '\"', next : \"start\"},\n                        {token : \"paren.string\", regex : '#{', push : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"js\",\n                    token : \"string\", regex : \"`\", next : [\n                        {token : \"string\", regex : \"`\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    regex: \"[{}]\", onMatch: function(val, state, stack) {\n                        this.next = \"\";\n                        if (val == \"{\" && stack.length) {\n                            stack.unshift(\"start\", state);\n                            return \"paren\";\n                        }\n                        if (val == \"}\" && stack.length) {\n                            stack.shift();\n                            this.next = stack.shift() || \"\";\n                            if (this.next.indexOf(\"string\") != -1)\n                                return \"paren.string\";\n                        }\n                        return \"paren\";\n                    }\n                }, {\n                    token : \"string.regex\",\n                    regex : \"///\",\n                    next : \"heregex\"\n                }, {\n                    token : \"string.regex\",\n                    regex : /(?:\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)(?:[imgy]{0,4})(?!\\w)/\n                }, {\n                    token : \"comment\",\n                    regex : \"###(?!#)\",\n                    next : \"comment\"\n                }, {\n                    token : \"comment\",\n                    regex : \"#.*\"\n                }, {\n                    token : [\"punctuation.operator\", \"text\", \"identifier\"],\n                    regex : \"(\\\\.)(\\\\s*)(\" + illegal + \")\"\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\.{1,3}\"\n                }, {\n                    token : [\"keyword\", \"text\", \"language.support.class\",\n                     \"text\", \"keyword\", \"text\", \"language.support.class\"],\n                    regex : \"(class)(\\\\s+)(\" + identifier + \")(?:(\\\\s+)(extends)(\\\\s+)(\" + identifier + \"))?\"\n                }, {\n                    token : [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\"].concat(functionRule.token),\n                    regex : \"(\" + identifier + \")(\\\\s*)([=:])(\\\\s*)\" + functionRule.regex\n                }, \n                functionRule, \n                {\n                    token : \"variable\",\n                    regex : \"@(?:\" + identifier + \")?\"\n                }, {\n                    token: keywordMapper,\n                    regex : identifier\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\,|\\\\.\"\n                }, {\n                    token : \"storage.type\",\n                    regex : \"[\\\\-=]>\"\n                }, {\n                    token : \"keyword.operator\",\n                    regex : \"(?:[-+*/%<>&|^!?=]=|>>>=?|\\\\-\\\\-|\\\\+\\\\+|::|&&=|\\\\|\\\\|=|<<=|>>=|\\\\?\\\\.|\\\\.{2,3}|[!*+-=><])\"\n                }, {\n                    token : \"paren.lparen\",\n                    regex : \"[({[]\"\n                }, {\n                    token : \"paren.rparen\",\n                    regex : \"[\\\\]})]\"\n                }, {\n                    token : \"text\",\n                    regex : \"\\\\s+\"\n                }],\n\n\n            heregex : [{\n                token : \"string.regex\",\n                regex : '.*?///[imgy]{0,4}',\n                next : \"start\"\n            }, {\n                token : \"comment.regex\",\n                regex : \"\\\\s+(?:#.*)?\"\n            }, {\n                token : \"string.regex\",\n                regex : \"\\\\S+\"\n            }],\n\n            comment : [{\n                token : \"comment\",\n                regex : '###',\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }]\n        };\n        this.normalizeRules();\n    }\n\n    exports.CoffeeHighlightRules = CoffeeHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/coffee\",[\"require\",\"exports\",\"module\",\"ace/mode/coffee_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\",\"ace/range\",\"ace/mode/text\",\"ace/worker/worker_client\",\"ace/lib/oop\"], function(require, exports, module) {\n\"use strict\";\n\nvar Rules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\nvar Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar TextMode = require(\"./text\").Mode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar oop = require(\"../lib/oop\");\n\nfunction Mode() {\n    this.HighlightRules = Rules;\n    this.$outdent = new Outdent();\n    this.foldingRules = new FoldMode();\n}\n\noop.inherits(Mode, TextMode);\n\n(function() {\n    var indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|(?:swi|ca)tch(?:\\s+[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?|finally))\\s*$|^\\s*(else\\b\\s*)?(?:if|for|while|loop)\\b(?!.*\\bthen\\b)/;\n    \n    this.lineCommentStart = \"#\";\n    this.blockComment = {start: \"###\", end: \"###\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n    \n        if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') &&\n            state === 'start' && indenter.test(line))\n            indent += tab;\n        return indent;\n    };\n    \n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    \n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/coffee_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        \n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n        \n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n        \n        return worker;\n    };\n\n    this.$id = \"ace/mode/coffee\";\n    this.snippetFileId = \"ace/snippets/coffee\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/coffee\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}