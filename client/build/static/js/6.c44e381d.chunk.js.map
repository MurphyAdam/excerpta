{"version":3,"sources":["components/Snippet/SnippetShowCase.jsx"],"names":["languages","forEach","mode","config","setModuleUrl","themes","theme","useStyles","makeStyles","root","flexGrow","header","display","alignItems","height","paddingLeft","spacing","backgroundColor","palette","background","default","icon","width","SnippetShowCase","props","snippets","editorPreferences","classes","useTheme","useWindowDimensions","useState","activeStep","setActiveStep","length","maxSteps","setMaxSteps","currentSnippet","setCurrentSnippet","useEffect","prevActiveStep","editorDimensions","className","square","elevation","separator","breadcrumb","aria-label","variant","color","noWrap","name","owner","username","language","formatDistanceToNow","Date","parse","created","private","fontSize","font","Number","toString","value","code","editorProps","$blockScrolling","setOptions","useWorker","readOnly","steps","position","nextButton","size","onClick","disabled","direction","backButton"],"mappings":"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","file":"static/js/6.c44e381d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CodeIcon from '@material-ui/icons/Code';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport AceEditor from \"react-ace\";\nimport { languages, themes } from '../../constants';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\n\nimport { config } from 'ace-builds';\n\nlanguages.forEach(mode => {\nconfig.setModuleUrl(\n   `ace/mode/${mode}`,\n   `https://cdn.jsdelivr.net/npm/ace-builds@1.4.12/src-min-noconflict/mode-${mode}.js`\n);});\n\nthemes.forEach(theme => {\nconfig.setModuleUrl(\n   `ace/theme/${theme}`,\n   `https://cdn.jsdelivr.net/npm/ace-builds@1.4.12/src-min-noconflict/theme-${theme}.js`\n);});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  icon: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nexport default function SnippetShowCase(props) {\n  const { snippets = [], editorPreferences } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const { height, width } = useWindowDimensions();\n  const [activeStep, setActiveStep] = useState(0);\n  const [maxSteps, setMaxSteps] = useState(snippets.length);\n  const [currentSnippet, setCurrentSnippet] = useState(snippets[activeStep]);\n\n  useEffect(() => {\n    // when snippets.length changes, we would want to push control to the first\n    // item in the snippets array again. This makes sure we don't run into issues\n    // such as index out of range. as maxSteps is defined by snippets.length;\n    setActiveStep(prevActiveStep => 0);\n    setMaxSteps(snippets.length)\n  }, [snippets.length])\n\n  useEffect(() => {\n    setCurrentSnippet(snippets[activeStep]);\n    // eslint-disable-next-line\n  }, [activeStep])\n\n  const editorDimensions = {\n    width: (83/100) * width,\n    height: (70/100) * height,\n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper square elevation={0} className={classes.header}>\n        <Breadcrumbs separator=\" \" \n          className={classes.breadcrumb} \n          aria-label=\"User Meta\">\n          <DescriptionIcon className={classes.icon} />\n          <Typography variant=\"subtitle2\" \n            color=\"inherit\" \n            noWrap>\n            {currentSnippet.name}\n          </Typography>\n          <PersonIcon className={classes.icon} />\n          <Typography variant=\"subtitle2\" \n            color=\"inherit\" \n            noWrap>\n            {currentSnippet.owner.username}\n          </Typography>\n          <CodeIcon className={classes.icon} />\n          <Typography variant=\"subtitle2\" \n            color=\"inherit\" \n            noWrap>\n            {currentSnippet.language}\n          </Typography>\n          <DateRangeIcon className={classes.icon} />\n          <Typography variant=\"subtitle2\" \n            color=\"inherit\" \n            noWrap>\n            Date created: {formatDistanceToNow(new Date (Date.parse(currentSnippet.created)))} ago\n          </Typography>\n          {!!currentSnippet.private \n            ? \n            <LockIcon className={classes.icon} />\n            : \n            <PublicIcon className={classes.icon} />\n          }\n          <Typography variant=\"subtitle2\" \n            color=\"inherit\" \n            noWrap>\n            {!!currentSnippet.private ? \"Private\" : \"Public\"}\n          </Typography>\n        </Breadcrumbs>\n      </Paper>\n        <AceEditor\n          mode={currentSnippet.language}\n          fontSize={editorPreferences.font}\n          width={`${Number(editorDimensions.width).toString()}px`}\n          height={`${Number(editorDimensions.height).toString()}px`}\n          value={currentSnippet.code}\n          theme={editorPreferences.theme}\n          name=\"UNIQUE_ID_OF_DIV\"\n          editorProps={{ $blockScrolling: true }}\n          setOptions={{\n            useWorker: false,\n          }}\n          readOnly={true}\n        />\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"text\"\n        activeStep={activeStep}\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n            Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Back\n          </Button>\n        }\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}