{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-vbscript.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","VBScriptHighlightRules","keywordMapper","this","createKeywordMapper","$rules","token","regex","next","caseInsensitive","defaultToken","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","indentKeywords","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","exec","toLowerCase","type","getTokenAt","index","vbsBlock","getFoldWidget","keyword","column","tokenRange","stream","endOpenings","getCurrentToken","startTokenValue","value","val","stack","dir","firstRange","getCurrentTokenRange","checkToken","RegExp","endTest","step","stepBackward","start","end","tokenPos","getCurrentTokenPosition","stepForward","endColumn","nextTokenPos","length","startColumn","startRow","ranges","push","outputRange","ignore","level","getCurrentTokenRow","unshift","shift","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","outdentKeywords","getNextLineIndent","state","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","i","getNetIndentLevel","substr","checkOutdent","input","trim","indexOf","getMatching","undefined","pos","selection","lead","startToken","autoOutdent","startRange","replace","outdentRows","$id","m"],"mappings":"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","file":"static/js/161.f789d037.chunk.js","sourcesContent":["ace.define(\"ace/mode/vbscript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar VBScriptHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control.asp\":  \"If|Then|Else|ElseIf|End|While|Wend|For|To|Each|Case|Select|Return\"\n            + \"|Continue|Do|Until|Loop|Next|With|Exit|Function|Property|Type|Enum|Sub|IIf|Class\",\n        \"storage.type.asp\": \"Dim|Call|Const|Redim|Set|Let|Get|New|Randomize|Option|Explicit|Preserve|Erase|Execute|ExecuteGlobal\",\n        \"storage.modifier.asp\": \"Private|Public|Default\",\n        \"keyword.operator.asp\": \"Mod|And|Not|Or|Xor|As|Eqv|Imp|Is\",\n        \"constant.language.asp\": \"Empty|False|Nothing|Null|True\",\n        \"variable.language.vb.asp\": \"Me\",\n        \"support.class.vb.asp\": \"RegExp\",\n        \"support.class.asp\": \"Application|ObjectContext|Request|Response|Server|Session\",\n        \"support.class.collection.asp\": \"Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables\",\n        \"support.constant.asp\": \"TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute\"\n            + \"|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout\",\n        \"support.function.asp\": \"Lock|Unlock|SetAbort|SetComplete|BinaryRead|AddHeader|AppendToLog\"\n            + \"|BinaryWrite|Clear|Flush|Redirect|Write|CreateObject|HTMLEncode|MapPath|URLEncode|Abandon|Convert|Regex\",\n        \"support.function.event.asp\": \"Application_OnEnd|Application_OnStart\"\n            + \"|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart\",\n        \"support.function.vb.asp\": \"Array|Add|Asc|Atn|CBool|CByte|CCur|CDate|CDbl|Chr|CInt|CLng\"\n            + \"|Conversions|Cos|CreateObject|CSng|CStr|Date|DateAdd|DateDiff|DatePart|DateSerial\"\n            + \"|DateValue|Day|Derived|Math|Escape|Eval|Exists|Exp|Filter|FormatCurrency\"\n            + \"|FormatDateTime|FormatNumber|FormatPercent|GetLocale|GetObject|GetRef|Hex\"\n            + \"|Hour|InputBox|InStr|InStrRev|Int|Fix|IsArray|IsDate|IsEmpty|IsNull|IsNumeric\"\n            + \"|IsObject|Item|Items|Join|Keys|LBound|LCase|Left|Len|LoadPicture|Log|LTrim|RTrim\"\n            + \"|Trim|Maths|Mid|Minute|Month|MonthName|MsgBox|Now|Oct|Remove|RemoveAll|Replace\"\n            + \"|RGB|Right|Rnd|Round|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion\"\n            + \"|ScriptEngineMinorVersion|Second|SetLocale|Sgn|Sin|Space|Split|Sqr|StrComp|String|StrReverse\"\n            + \"|Tan|Time|Timer|TimeSerial|TimeValue|TypeName|UBound|UCase|Unescape|VarType|Weekday|WeekdayName|Year\"\n            + \"|AscB|AscW|ChrB|ChrW|InStrB|LeftB|LenB|MidB|RightB|Abs|GetUILanguage\",\n        \"support.type.vb.asp\": \"vbTrue|vbFalse|vbCr|vbCrLf|vbFormFeed|vbLf|vbNewLine|vbNullChar|vbNullString\"\n            + \"|vbTab|vbVerticalTab|vbBinaryCompare|vbTextCompare|vbSunday|vbMonday|vbTuesday|vbWednesday\"\n            + \"|vbThursday|vbFriday|vbSaturday|vbUseSystemDayOfWeek|vbFirstJan1|vbFirstFourDays|vbFirstFullWeek\"\n            + \"|vbGeneralDate|vbLongDate|vbShortDate|vbLongTime|vbShortTime|vbObjectError|vbEmpty|vbNull|vbInteger\"\n            + \"|vbLong|vbSingle|vbDouble|vbCurrency|vbDate|vbString|vbObject|vbError|vbBoolean|vbVariant\"\n            + \"|vbDataObject|vbDecimal|vbByte|vbArray|vbOKOnly|vbOKCancel|vbAbortRetryIgnore|vbYesNoCancel|vbYesNo\"\n            + \"|vbRetryCancel|vbCritical|vbQuestion|vbExclamation|vbInformation|vbDefaultButton1|vbDefaultButton2\"\n            + \"|vbDefaultButton3|vbDefaultButton4|vbApplicationModal|vbSystemModal|vbOK|vbCancel|vbAbort|vbRetry|vbIgnore|vbYes|vbNo\"\n            + \"|vbUseDefault\"\n    }, \"identifier\", true);\n\n    this.$rules = {\n    \"start\": [\n        {\n            token: [\n                \"meta.ending-space\"\n            ],\n            regex: \"$\"\n        },\n        {\n            token: [null],\n            regex: \"^(?=\\\\t)\",\n            next: \"state_3\"\n        },\n        {\n            token: [null],\n            regex: \"^(?= )\",\n            next: \"state_4\"\n        },\n        {\n            token: [\n                \"text\",\n                \"storage.type.function.asp\",\n                \"text\",\n                \"entity.name.function.asp\",\n                \"text\",\n                \"punctuation.definition.parameters.asp\",\n                \"variable.parameter.function.asp\",\n                \"punctuation.definition.parameters.asp\"\n            ],\n            regex: \"^(\\\\s*)(Function|Sub)(\\\\s+)([a-zA-Z_]\\\\w*)(\\\\s*)(\\\\()([^)]*)(\\\\))\"\n        },\n        {\n            token: \"punctuation.definition.comment.asp\",\n            regex: \"'|REM(?=\\\\s|$)\",\n            next: \"comment\",\n            caseInsensitive: true\n        },\n        {\n            token: \"storage.type.asp\",\n            regex: \"On\\\\s+Error\\\\s+(?:Resume\\\\s+Next|GoTo)\\\\b\",\n            caseInsensitive: true\n        },\n        {\n            token: \"punctuation.definition.string.begin.asp\",\n            regex: '\"',\n            next: \"string\"\n        },\n        {\n            token: [\n                \"punctuation.definition.variable.asp\"\n            ],\n            regex: \"(\\\\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b\\\\s*\"\n        },\n        {\n            token: \"constant.numeric.asp\",\n            regex: \"-?\\\\b(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\\\\.?[0-9]*)|(?:\\\\.[0-9]+))(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b\"\n        },\n        {\n            regex: \"\\\\w+\",\n            token: keywordMapper\n        },\n        {\n            token: [\"entity.name.function.asp\"],\n            regex: \"(?:(\\\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b)(?=\\\\(\\\\)?))\"\n        },\n        {\n            token: [\"keyword.operator.asp\"],\n            regex: \"\\\\-|\\\\+|\\\\*|\\\\/|\\\\>|\\\\<|\\\\=|\\\\&|\\\\\\\\|\\\\^\"\n        }\n    ],\n    \"state_3\": [\n        {\n            token: [\n                \"meta.odd-tab.tabs\",\n                \"meta.even-tab.tabs\"\n            ],\n            regex: \"(\\\\t)(\\\\t)?\"\n        },\n        {\n            token: \"meta.leading-space\",\n            regex: \"(?=[^\\\\t])\",\n            next: \"start\"\n        },\n        {\n            token: \"meta.leading-space\",\n            regex: \".\",\n            next: \"state_3\"\n        }\n    ],\n    \"state_4\": [\n        {\n            token: [\"meta.odd-tab.spaces\", \"meta.even-tab.spaces\"],\n            regex: \"(  )(  )?\"\n        },\n        {\n            token: \"meta.leading-space\",\n            regex: \"(?=[^ ])\",\n            next: \"start\"\n        },\n        {\n            defaultToken: \"meta.leading-space\"\n        }\n    ],\n    \"comment\": [\n        {\n            token: \"comment.line.apostrophe.asp\",\n            regex: \"$\",\n            next: \"start\"\n        },\n        {\n            defaultToken: \"comment.line.apostrophe.asp\"\n        }\n    ],\n    \"string\": [\n        {\n            token: \"constant.character.escape.apostrophe.asp\",\n            regex: '\"\"'\n        },\n        {\n            token: \"string.quoted.double.asp\",\n            regex: '\"',\n            next: \"start\"\n        },\n        {\n            defaultToken: \"string.quoted.double.asp\"\n        }\n    ]\n};\n\n};\n\noop.inherits(VBScriptHighlightRules, TextHighlightRules);\n\nexports.VBScriptHighlightRules = VBScriptHighlightRules;\n});\n\nace.define(\"ace/mode/folding/vbscript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\n\nvar FoldMode = exports.FoldMode = function() {};\n\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.indentKeywords = {\n        \"class\": 1,\n        \"function\": 1,\n        \"sub\": 1,\n        \"if\": 1,\n        \"select\": 1,\n        \"do\": 1,\n        \"for\": 1,\n        \"while\": 1,\n        \"with\": 1,\n        \"property\": 1,\n        \"else\": 1,\n        \"elseif\": 1,\n        \"end\": -1,\n        \"loop\": -1,\n        \"next\": -1,\n        \"wend\": -1\n    };\n\n    this.foldingStartMarker = /(?:\\s|^)(class|function|sub|if|select|do|for|while|with|property|else|elseif)\\b/i;\n    this.foldingStopMarker = /\\b(end|loop|next|wend)\\b/i;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart || isEnd) {\n            var match = (isEnd) ? this.foldingStopMarker.exec(line) : this.foldingStartMarker.exec(line);\n            var keyword = match && match[1].toLowerCase();\n            if (keyword) {\n                var type = session.getTokenAt(row, match.index + 2).type;\n                if (type === \"keyword.control.asp\" || type === \"storage.type.function.asp\")\n                    return this.vbsBlock(session, row, match.index + 2);\n            }\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart && !isEnd) {\n            var match = this.foldingStartMarker.exec(line);\n            var keyword = match && match[1].toLowerCase();\n            if (keyword) {\n                var type = session.getTokenAt(row, match.index + 2).type;\n                if (type == \"keyword.control.asp\" || type == \"storage.type.function.asp\") {\n                    if (keyword == \"if\" && !/then\\s*('|$)/i.test(line))\n                        return \"\";\n                    return \"start\";\n                }\n            }\n        }\n        return \"\";\n    };\n\n    this.vbsBlock = function(session, row, column, tokenRange) {\n        var stream = new TokenIterator(session, row, column);\n\n        var endOpenings = {\n            \"class\": 1,\n            \"function\": 1,\n            \"sub\": 1,\n            \"if\": 1,\n            \"select\": 1,\n            \"with\": 1,\n            \"property\": 1,\n            \"else\": 1,\n            \"elseif\": 1\n        };\n\n        var token = stream.getCurrentToken();\n        if (!token || (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\"))\n            return;\n\n        var startTokenValue = token.value.toLowerCase();\n        var val = token.value.toLowerCase();\n\n        var stack = [val];\n        var dir = this.indentKeywords[val];\n\n        if (!dir)\n            return;\n\n        var firstRange = stream.getCurrentTokenRange();\n        switch (val) {\n            case \"property\":\n            case \"sub\":\n            case \"function\":\n            case \"if\":\n            case \"select\":\n            case \"do\":\n            case \"for\":\n            case \"class\":\n            case \"while\":\n            case \"with\":\n                var line = session.getLine(row);\n                var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                if (singleLineCondition)\n                    return;\n                var checkToken = new RegExp(\"(?:^|\\\\s)\" + val, \"i\");\n                var endTest = /^\\s*End\\s(If|Sub|Select|Function|Class|With|Property)\\s*/i.test(line);\n                if (!checkToken.test(line) && !endTest) {\n                    return;\n                }\n                if (endTest) {\n                    var tokenRange = stream.getCurrentTokenRange();\n                    stream.step = stream.stepBackward;\n                    stream.step();\n                    stream.step();\n                    token = stream.getCurrentToken();\n                    if (token) {\n                        val = token.value.toLowerCase();\n                        if (val == \"end\") {\n                            firstRange = stream.getCurrentTokenRange();\n                            firstRange = new Range(firstRange.start.row, firstRange.start.column, tokenRange.start.row, tokenRange.end.column);\n                        }\n                    }\n                    dir = -1;\n                }\n                break;\n            case \"end\":\n                var tokenPos = stream.getCurrentTokenPosition();\n                firstRange = stream.getCurrentTokenRange();\n                stream.step = stream.stepForward;\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n                if (token) {\n                    val = token.value.toLowerCase();\n                    if (val in endOpenings) {\n                        startTokenValue = val;\n                        var nextTokenPos = stream.getCurrentTokenPosition();\n                        var endColumn = nextTokenPos.column + val.length;\n                        firstRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                    }\n                }\n                stream.step = stream.stepBackward;\n                stream.step();\n                stream.step();\n                break;\n        }\n        var startColumn = dir === -1 ? session.getLine(row - 1).length : session.getLine(row).length;\n        var startRow = row;\n        var ranges = [];\n        ranges.push(firstRange);\n\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while(token = stream.step()) {\n            var outputRange = null;\n            var ignore = false;\n            if (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\")\n                continue;\n            val = token.value.toLowerCase();\n            var level = dir * this.indentKeywords[val];\n\n            switch (val) {\n                case \"property\":\n                case \"sub\":\n                case \"function\":\n                case \"if\":\n                case \"select\":\n                case \"do\":\n                case \"for\":\n                case \"class\":\n                case \"while\":\n                case \"with\":\n                    var line = session.getLine(stream.getCurrentTokenRow());\n                    var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                    if (singleLineCondition) {\n                        level = 0;\n                        ignore = true;\n                    }\n                    var checkToken = new RegExp(\"^\\\\s* end\\\\s+\" + val, \"i\");\n                    if (checkToken.test(line)) {\n                        level = 0;\n                        ignore = true;\n                    }\n                    break;\n                case \"elseif\":\n                case \"else\":\n                    level = 0;\n                    if (startTokenValue != \"elseif\") {\n                        ignore = true;\n                    }\n                    break;\n            }\n\n            if (level > 0) {\n                stack.unshift(val);\n            } else if (level <= 0 && ignore === false) {\n                stack.shift();\n                if (!stack.length) {\n                        switch (val) {\n                            case \"end\":\n                                var tokenPos = stream.getCurrentTokenPosition();\n                                outputRange = stream.getCurrentTokenRange();\n                                stream.step();\n                                stream.step();\n                                token = stream.getCurrentToken();\n                                if (token) {\n                                    val = token.value.toLowerCase();\n                                    if (val in endOpenings) {\n                                        if ((startTokenValue == \"else\" || startTokenValue == \"elseif\")) {\n                                            if (val !== \"if\") {\n                                                ranges.shift();\n                                            }\n                                        } else {\n                                            if (val != startTokenValue)\n                                                ranges.shift();\n                                        }\n                                        var nextTokenPos = stream.getCurrentTokenPosition();\n                                        var endColumn = nextTokenPos.column + val.length;\n                                        outputRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                                    } else {\n                                        ranges.shift();\n                                    }\n                                } else {\n                                    ranges.shift();\n                                }\n                                stream.step = stream.stepBackward;\n                                stream.step();\n                                stream.step();\n                                token = stream.getCurrentToken();\n                                val = token.value.toLowerCase();\n                                break;\n                            case \"select\":\n                            case \"sub\":\n                            case \"if\":\n                            case \"function\":\n                            case \"class\":\n                            case \"with\":\n                            case \"property\":\n                                if (val != startTokenValue)\n                                    ranges.shift();\n                                break;\n                            case \"do\":\n                                if (startTokenValue != \"loop\")\n                                    ranges.shift();\n                                break;\n                            case \"loop\":\n                                if (startTokenValue != \"do\")\n                                    ranges.shift();\n                                break;\n                            case \"for\":\n                                if (startTokenValue != \"next\")\n                                    ranges.shift();\n                                break;\n                            case \"next\":\n                                if (startTokenValue != \"for\")\n                                    ranges.shift();\n                                break;\n                            case \"while\":\n                                if (startTokenValue != \"wend\")\n                                    ranges.shift();\n                                break;\n                            case \"wend\":\n                                if (startTokenValue != \"while\")\n                                    ranges.shift();\n                                break;\n                        }\n                        break;\n                }\n\n                if (level === 0){\n                    stack.unshift(val);\n                }\n            }\n        }\n\n        if (!token)\n            return null;\n\n        if (tokenRange) {\n            if (!outputRange) {\n                ranges.push(stream.getCurrentTokenRange());\n            } else {\n                ranges.push(outputRange);\n            }\n            return ranges;\n        }\n\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1) {\n            var endColumn = session.getLine(row).length;\n            return new Range(row, endColumn, startRow - 1, startColumn);\n        } else\n            return new Range(startRow, startColumn, row - 1, session.getLine(row - 1).length);\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/vbscript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/vbscript_highlight_rules\",\"ace/mode/folding/vbscript\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar VBScriptHighlightRules = require(\"./vbscript_highlight_rules\").VBScriptHighlightRules;\nvar FoldMode = require(\"./folding/vbscript\").FoldMode;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = VBScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"'\", \"REM\"];\n\n    var outdentKeywords = [\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"loop\",\n        \"next\",\n        \"wend\"\n    ];\n\n    function getNetIndentLevel(tokens, line, indentKeywords) {\n        var level = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.type == \"keyword.control.asp\" || token.type == \"storage.type.function.asp\") {\n                var val = token.value.toLowerCase();\n                if (val in indentKeywords) {\n                    switch (val) {\n                        case \"property\":\n                        case \"sub\":\n                        case \"function\":\n                        case \"select\":\n                        case \"do\":\n                        case \"for\":\n                        case \"class\":\n                        case \"while\":\n                        case \"with\":\n                        case \"if\":\n                            var checkToken = new RegExp(\"^\\\\s* end\\\\s+\" + val, \"i\");\n                            var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                            if (!singleLineCondition && !checkToken.test(line))\n                                level += indentKeywords[val];\n                            break;\n                        default:\n                            level += indentKeywords[val];\n                            break;\n                    }\n                }\n            }\n        }\n        if (level < 0) {\n            return -1;\n        } else if (level > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var level = 0;\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (state == \"start\") {\n            level = getNetIndentLevel(tokens, line, this.indentKeywords);\n        }\n        if (level > 0) {\n            return indent + tab;\n        } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n            if (!this.checkOutdent(state, line, \"\\n\")) {\n                return indent.substr(0, indent.length - tab.length);\n            }\n        }\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens || !tokens.length)\n            return false;\n        var val = tokens[0].value.toLowerCase();\n        return ((tokens[0].type == \"keyword.control.asp\" || tokens[0].type == \"storage.type.function.asp\") && outdentKeywords.indexOf(val) != -1);\n    };\n\n    this.getMatching = function(session, row, column, tokenRange) {\n        if (row == undefined) {\n            var pos = session.selection.lead;\n            column = pos.column;\n            row = pos.row;\n        }\n        if (tokenRange == undefined)\n            tokenRange = true;\n\n        var startToken = session.getTokenAt(row, column);\n        if (startToken) {\n            var val = startToken.value.toLowerCase();\n            if (val in this.indentKeywords)\n                return this.foldingRules.vbsBlock(session, row, column, tokenRange);\n        }\n    };\n\n    this.autoOutdent = function(state, session, row) {\n        var line = session.getLine(row);\n        var column = line.match(/^\\s*/)[0].length;\n        if (!column || !row) return;\n\n        var startRange = this.getMatching(session, row, column + 1, false);\n        if (!startRange || startRange.start.row == row)\n            return;\n        var indent = this.$getIndent(session.getLine(startRange.start.row));\n        if (indent.length != column) {\n            session.replace(new Range(row, 0, row, column), indent);\n            session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n        }\n    };\n\n    this.$id = \"ace/mode/vbscript\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/vbscript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}