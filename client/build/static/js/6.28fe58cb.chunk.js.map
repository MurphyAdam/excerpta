{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-apex.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","ApexHighlightRules","mainKeywordMapper","createKeywordMapper","string","options","multiline","escape","error","type","value","slice","merge","maybe_soql","soql","embedRules","normalizeRules","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CstyleBehaviour","ApexMode","HighlightRules","foldingRules","$behaviour","lineCommentStart","blockComment"],"mappings":"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","file":"static/js/6.28fe58cb.chunk.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/apex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"../mode/text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = require(\"../mode/doc_comment_highlight_rules\").DocCommentHighlightRules;\n\nvar ApexHighlightRules = function() {\n    var mainKeywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"activate|any|autonomous|begin|bigdecimal|byte|cast|char|collect|const\"\n             + \"|end|exit|export|float|goto|group|having|hint|import|inner|into|join|loop|number|object|of|outer\"\n             + \"|parallel|pragma|retrieve|returning|search|short|stat|synchronized|then|this_month\"\n             + \"|transaction|type|when\",\n        \"keyword\": \"private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final\"\n             + \"|and|array|as|asc|break|bulk|by|catch|class|commit|continue|convertcurrency\"\n             + \"|delete|desc|do|else|enum|extends|false|final|finally|for|from|future|global\"\n             + \"|if|implements|in|insert|instanceof|interface|last_90_days|last_month\"\n             + \"|last_n_days|last_week|like|limit|list|map|merge|new|next_90_days|next_month|next_n_days\"\n             + \"|next_week|not|null|nulls|on|or|override|package|return\"\n             + \"|rollback|savepoint|select|set|sort|super|testmethod|this|this_week|throw|today\"\n             + \"|tolabel|tomorrow|trigger|true|try|undelete|update|upsert|using|virtual|webservice\"\n             + \"|where|while|yesterday|switch|case|default\",\n        \"storage.type\":\n            \"def|boolean|byte|char|short|int|float|pblob|date|datetime|decimal|double|id|integer|long|string|time|void|blob|Object\",\n        \"constant.language\":\n            \"true|false|null|after|before|count|excludes|first|includes|last|order|sharing|with\",\n        \"support.function\":\n            \"system|apex|label|apexpages|userinfo|schema\"\n    }, \"identifier\", true);\n    function keywordMapper(value) {\n        if (value.slice(-3) == \"__c\") return \"support.function\";\n        return mainKeywordMapper(value);\n    }\n    \n    function string(start, options) {\n        return {\n            regex: start + (options.multiline ? \"\" : \"(?=.)\"),\n            token: \"string.start\",\n            next: [{\n                regex: options.escape,\n                token: \"character.escape\"\n            }, {\n                regex: options.error,\n                token: \"error.invalid\"\n            }, {\n                regex: start + (options.multiline ? \"\" : \"|$\"),\n                token: \"string.end\",\n                next: options.next || \"start\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        };\n    }\n    \n    function comments() {\n        return [{\n                token : \"comment\",\n                regex : \"\\\\/\\\\/(?=.)\",\n                next : [\n                    DocCommentHighlightRules.getTagRule(),\n                    {token : \"comment\", regex : \"$|^\", next : \"start\"},\n                    {defaultToken : \"comment\", caseInsensitive: true}\n                ]\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : /\\/\\*/,\n                next : [\n                    DocCommentHighlightRules.getTagRule(),\n                    {token : \"comment\", regex : \"\\\\*\\\\/\", next : \"start\"},\n                    {defaultToken : \"comment\", caseInsensitive: true}\n                ]\n            }\n        ];\n    }\n    \n    this.$rules = {\n        start: [\n            string(\"'\", {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false\n            }),\n            comments(\"c\"),\n            {\n                type: \"decoration\",\n                token: [\n                    \"meta.package.apex\",\n                    \"keyword.other.package.apex\",\n                    \"meta.package.apex\",\n                    \"storage.modifier.package.apex\",\n                    \"meta.package.apex\",\n                    \"punctuation.terminator.apex\"\n                ],\n                regex: /^(\\s*)(package)\\b(?:(\\s*)([^ ;$]+)(\\s*)((?:;)?))?/\n            }, {\n                 regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n                 token: \"constant.language\"\n            },\n            {\n                regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n                token: keywordMapper\n            },  \n            {\n                regex: \"`#%\",\n                token: \"error.invalid\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /[+-]?\\d+(?:(?:\\.\\d*)?(?:[LlDdEe][+-]?\\d+)?)\\b|\\.\\d+[LlDdEe]/\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|[!$%&*+\\-~\\/^]=?/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[?:,;.]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[]/,\n                next  : \"maybe_soql\",\n                merge : false\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]/,\n                next  : \"start\",\n                merge : false\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]/,\n                merge : false\n            } \n        ], \n        maybe_soql: [{\n            regex: /\\s+/,\n            token: \"text\"\n        }, {\n            regex: /(SELECT|FIND)\\b/,\n            token: \"keyword\",\n            caseInsensitive: true,\n            next: \"soql\"\n        }, {\n            regex: \"\",\n            token: \"none\",\n            next: \"start\"\n        }],\n        soql: [{\n            regex: \"(:?ASC|BY|CATEGORY|CUBE|DATA|DESC|END|FIND|FIRST|FOR|FROM|GROUP|HAVING|IN|LAST\"\n                + \"|LIMIT|NETWORK|NULLS|OFFSET|ORDER|REFERENCE|RETURNING|ROLLUP|SCOPE|SELECT\"\n                + \"|SNIPPET|TRACKING|TYPEOF|UPDATE|USING|VIEW|VIEWSTAT|WHERE|WITH|AND|OR)\\\\b\",\n            token: \"keyword\",\n            caseInsensitive: true\n        }, {\n            regex: \"(:?target_length|toLabel|convertCurrency|count|Contact|Account|User|FIELDS)\\\\b\",\n            token: \"support.function\",\n            caseInsensitive: true\n        }, {\n            token : \"paren.rparen\",\n            regex : /[\\]]/,\n            next  : \"start\",\n            merge : false\n        }, \n        string(\"'\", {\n            escape: /\\\\[nb'\"\\\\]/,\n            error: /\\\\./,\n            multiline: false,\n            next: \"soql\"\n        }),\n        string('\"', {\n            escape: /\\\\[nb'\"\\\\]/,\n            error: /\\\\./,\n            multiline: false,\n            next: \"soql\"\n        }),\n        {\n            regex: /\\\\./,\n            token: \"character.escape\"\n        },\n        {\n            regex : /[\\?\\&\\|\\!\\{\\}\\[\\]\\(\\)\\^\\~\\*\\:\\\"\\'\\+\\-\\,\\.=\\\\\\/]/,\n            token : \"keyword.operator\"\n        }],\n        \n        \"log-start\" : [ {\n            token : \"timestamp.invisible\",\n            regex : /^[\\d:.() ]+\\|/, \n            next: \"log-header\"\n        },  {\n            token : \"timestamp.invisible\",\n            regex : /^  (Number of|Maximum)[^:]*:/,\n            next: \"log-comment\"\n        }, {\n            token : \"invisible\",\n            regex : /^Execute Anonymous:/,\n            next: \"log-comment\"\n        },  {\n            defaultToken: \"text\"\n        }],\n        \"log-comment\": [{\n            token : \"log-comment\",\n            regex : /.*$/,\n            next: \"log-start\"\n        }],\n        \"log-header\": [{\n            token : \"timestamp.invisible\",\n            regex : /((USER_DEBUG|\\[\\d+\\]|DEBUG)\\|)+/\n        },\n        {\n            token : \"keyword\",\n            regex: \"(?:EXECUTION_FINISHED|EXECUTION_STARTED|CODE_UNIT_STARTED\"\n                + \"|CUMULATIVE_LIMIT_USAGE|LIMIT_USAGE_FOR_NS\"\n                + \"|CUMULATIVE_LIMIT_USAGE_END|CODE_UNIT_FINISHED)\"\n        }, {\n            regex: \"\",\n            next: \"log-start\"\n        }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n        \n\n    this.normalizeRules();\n};\n\n\noop.inherits(ApexHighlightRules, TextHighlightRules);\n\nexports.ApexHighlightRules = ApexHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/apex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/apex_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"../mode/text\").Mode;\nvar ApexHighlightRules = require(\"./apex_highlight_rules\").ApexHighlightRules;\nvar FoldMode = require(\"../mode/folding/cstyle\").FoldMode;\nvar CstyleBehaviour = require(\"../mode/behaviour/cstyle\").CstyleBehaviour;\n\nfunction ApexMode() {\n    TextMode.call(this);\n\n    this.HighlightRules = ApexHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = new CstyleBehaviour();\n}\n\noop.inherits(ApexMode, TextMode);\n\nApexMode.prototype.lineCommentStart = \"//\";\n\nApexMode.prototype.blockComment = {\n    start: \"/*\",\n    end: \"*/\"\n};\n\nexports.Mode = ApexMode;\n\n});                (function() {\n                    ace.require([\"ace/mode/apex\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}