{"version":3,"sources":["components/Snippet/ChangeMode.jsx"],"names":["ChangeMode","props","open","onOpen","onClose","editorPreferencesStateAction","editorPreferences","updateEditorPreferences","radioGroupRef","React","useRef","useState","mode","currentMode","setCurrentMode","changeMode","event","a","target","value","fullWidth","maxWidth","aria-labelledby","id","dividers","ref","aria-label","name","onChange","languages","map","lang","key","control","label","onClick","color"],"mappings":"mSAce,SAASA,EAAWC,GAAQ,IACjCC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,OAAQC,EAA0CH,EAA1CG,QAASC,EAAiCJ,EAAjCI,6BACvBC,EAA+CD,EAA/CC,kBAAmBC,EAA4BF,EAA5BE,wBACrBC,EAAgBC,IAAMC,OAAO,MAHK,EAIFC,mBAASL,EAAkBM,MAJzB,mBAIjCC,EAJiC,KAIpBC,EAJoB,KAMlCC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACXL,EAAOI,EAAME,OAAOC,MAC1BL,EAAeF,GACfL,EAAwB,CAACK,KAAMA,IAHd,2CAAH,sDAKhB,OACI,kBAAC,IAAD,CACEQ,WAAW,EACXC,SAAS,KACTnB,KAAMA,EACNC,OAAQA,EACRC,QAASA,EACTkB,kBAAgB,2BAChB,kBAAC,IAAD,CAAaC,GAAG,0BAAhB,eACA,kBAAC,IAAD,CAAeC,UAAQ,GACrB,kBAAC,IAAD,aAGA,kBAAC,IAAD,CACEC,IAAKjB,EACLkB,aAAW,WACXC,KAAK,WACLR,MAAON,EACPe,SAAUb,GAETc,IAAUC,KAAI,SAACC,GAAD,OACb,kBAAC,IAAD,CAAkBZ,MAAOY,EAAMC,IAAKD,EAAME,QAAS,kBAAC,IAAD,MAAWC,MAAOH,SAI3E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQI,QAAS/B,EAASgC,MAAM,WAAhC,UAGA,kBAAC,IAAD,CAAQD,QAAS/B,EAASgC,MAAM,WAAhC","file":"static/js/4.0944746a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { languages } from '../../constants';\n\n\nexport default function ChangeMode(props) {\n  const { open, onOpen, onClose, editorPreferencesStateAction } = props;\n  const { editorPreferences, updateEditorPreferences } = editorPreferencesStateAction;\n  const radioGroupRef = React.useRef(null);\n  const [currentMode, setCurrentMode] = useState(editorPreferences.mode);\n\n  const changeMode = async (event) => {\n    const mode = event.target.value;\n    setCurrentMode(mode);\n    updateEditorPreferences({mode: mode});\n  }\n  return (\n      <Dialog \n        fullWidth={true}\n        maxWidth=\"sm\"\n        open={open} \n        onOpen={onOpen} \n        onClose={onClose} \n        aria-labelledby=\"form-create-new-snippet\">\n        <DialogTitle id=\"form-snippet-file-name\">Change mode</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText>\n            Mode\n          </DialogContentText>\n          <RadioGroup\n            ref={radioGroupRef}\n            aria-label=\"Language\"\n            name=\"language\"\n            value={currentMode}\n            onChange={changeMode}\n          >\n            {languages.map((lang) => (\n              <FormControlLabel value={lang} key={lang} control={<Radio />} label={lang} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onClose} color=\"primary\" >\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n"],"sourceRoot":""}