{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-json5.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","JsonHighlightRules","this","$rules","token","regex","next","defaultToken","inherits","Json5HighlightRules","call","startRules","consumeLineEnd","key","unshift","apply","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","state","$id"],"mappings":"2FAAAA,gBAAIC,OAAO,gCAAgC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAASC,EAASC,GACpJ,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAqB,WACrBC,KAAKC,OAAS,CACV,MAAU,CACN,CACIC,MAAQ,WACRC,MAAQ,+CACT,CACCD,MAAQ,SACRC,MAAQ,IACRC,KAAQ,UACT,CACCF,MAAQ,mBACRC,MAAQ,wBACT,CACCD,MAAQ,mBACRC,MAAQ,mDACT,CACCD,MAAQ,4BACRC,MAAQ,qBACT,CACCD,MAAQ,OACRC,MAAQ,sCACT,CACCD,MAAQ,UACRC,MAAQ,aACT,CACCD,MAAQ,gBACRC,MAAQ,SACRC,KAAQ,WACT,CACCF,MAAQ,eACRC,MAAQ,SACT,CACCD,MAAQ,eACRC,MAAQ,WACT,CACCD,MAAQ,OACRC,MAAQ,SAGhB,OAAW,CACP,CACID,MAAQ,2BACRC,MAAQ,sDACT,CACCD,MAAQ,SACRC,MAAQ,MACRC,KAAQ,SACT,CACCC,aAAe,WAGvB,QAAY,CACR,CACIH,MAAQ,cACRC,MAAQ,SACRC,KAAQ,SACT,CACCC,aAAc,cAO9BR,EAAIS,SAASP,EAAoBD,GAEjCH,EAAQI,mBAAqBA,KAG7BP,IAAIC,OAAO,iCAAiC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAASC,EAASC,GACrJ,aAEA,IAAIC,EAAMH,EAAQ,cACdK,EAAqBL,EAAQ,0BAA0BK,mBAEvDQ,EAAsB,WACtBR,EAAmBS,KAAKR,MAExB,IAAIS,EAAa,CAAC,CACdP,MAAQ,WACRC,MAAQ,sDACT,CACCD,MAAQ,WACRC,MAAQ,0CACT,CACCD,MAAQ,4BACRC,MAAQ,cACT,CACCD,MAAQ,SACRC,MAAQ,IACRC,KAAQ,CAAC,CACLF,MAAQ,2BACRC,MAAQ,qDACRO,gBAAkB,GACnB,CACCR,MAAQ,SACRC,MAAQ,MACRC,KAAQ,SACT,CACCC,aAAe,YAEpB,CACCH,MAAQ,SACRC,MAAQ,eACRC,KAAQ,CAAC,CACLF,MAAQ,2BACRC,MAAQ,qDACRO,gBAAkB,GACnB,CACCR,MAAQ,SACRC,MAAQ,MACRC,KAAQ,SACT,CACCC,aAAe,YAEpB,CACCH,MAAQ,mBACRC,MAAQ,4BAGZ,IAAK,IAAIQ,KAAOX,KAAKC,OACjBD,KAAKC,OAAOU,GAAKC,QAAQC,MAAMb,KAAKC,OAAOU,GAAMF,GAErDT,KAAKc,kBAGTjB,EAAIS,SAASC,EAAqBR,GAElCJ,EAAQY,oBAAsBA,KAG9Bf,IAAIC,OAAO,kCAAkC,CAAC,UAAU,UAAU,SAAS,cAAc,SAASC,EAASC,EAASC,GACpH,aAEA,IAAImB,EAAQrB,EAAQ,YAAYqB,MAE5BC,EAAuB,cAE3B,WAEIhB,KAAKiB,aAAe,SAASC,EAAMC,GAC/B,QAAM,QAAQC,KAAKF,IAGZ,SAASE,KAAKD,IAGzBnB,KAAKqB,YAAc,SAASC,EAAKC,GAC7B,IACIC,EADOF,EAAIG,QAAQF,GACNC,MAAM,YAEvB,IAAKA,EAAO,OAAO,EAEnB,IAAIE,EAASF,EAAM,GAAGG,OAClBC,EAAeN,EAAIO,oBAAoB,CAACN,IAAKA,EAAKG,OAAQA,IAE9D,IAAKE,GAAgBA,EAAaL,KAAOA,EAAK,OAAO,EAErD,IAAIO,EAAS9B,KAAK+B,WAAWT,EAAIG,QAAQG,EAAaL,MACtDD,EAAIU,QAAQ,IAAIjB,EAAMQ,EAAK,EAAGA,EAAKG,EAAO,GAAII,IAGlD9B,KAAK+B,WAAa,SAASb,GACvB,OAAOA,EAAKM,MAAM,QAAQ,MAG/BhB,KAAKQ,EAAqBiB,WAE7BtC,EAAQqB,qBAAuBA,KAG/BxB,IAAIC,OAAO,0BAA0B,CAAC,UAAU,UAAU,SAAS,cAAc,YAAY,+BAA+B,SAASC,EAASC,EAASC,GACvJ,aAEA,IAAIC,EAAMH,EAAQ,iBACdqB,EAAQrB,EAAQ,eAAeqB,MAC/BmB,EAAexC,EAAQ,eAAeyC,SAEtCA,EAAWxC,EAAQwC,SAAW,SAASC,GACnCA,IACApC,KAAKqC,mBAAqB,IAAIC,OAC1BtC,KAAKqC,mBAAmBE,OAAOP,QAAQ,YAAa,IAAMI,EAAaI,QAE3ExC,KAAKyC,kBAAoB,IAAIH,OACzBtC,KAAKyC,kBAAkBF,OAAOP,QAAQ,YAAa,IAAMI,EAAaM,QAIlF7C,EAAIS,SAAS6B,EAAUD,GAEvB,WAEIlC,KAAKqC,mBAAqB,mCAC1BrC,KAAKyC,kBAAoB,uCACzBzC,KAAK2C,yBAA0B,uBAC/B3C,KAAK4C,yBAA2B,2BAChC5C,KAAK6C,cAAgB,4BACrB7C,KAAK8C,mBAAqB9C,KAAK+C,cAC/B/C,KAAK+C,cAAgB,SAASC,EAASC,EAAW1B,GAC9C,IAAIL,EAAO8B,EAAQvB,QAAQF,GAE3B,GAAIvB,KAAK2C,yBAAyBvB,KAAKF,KAC9BlB,KAAK6C,cAAczB,KAAKF,KAAUlB,KAAK4C,yBAAyBxB,KAAKF,GACtE,MAAO,GAGf,IAAIgC,EAAKlD,KAAK8C,mBAAmBE,EAASC,EAAW1B,GAErD,OAAK2B,GAAMlD,KAAK6C,cAAczB,KAAKF,GACxB,QAEJgC,GAGXlD,KAAKmD,mBAAqB,SAASH,EAASC,EAAW1B,EAAK6B,GACxD,IA2BI5B,EA3BAN,EAAO8B,EAAQvB,QAAQF,GAE3B,GAAIvB,KAAK6C,cAAczB,KAAKF,GACxB,OAAOlB,KAAKqD,sBAAsBL,EAAS9B,EAAMK,GAGrD,GADIC,EAAQN,EAAKM,MAAMxB,KAAKqC,oBACjB,CACP,IAAIiB,EAAI9B,EAAM+B,MAEd,GAAI/B,EAAM,GACN,OAAOxB,KAAKwD,oBAAoBR,EAASxB,EAAM,GAAID,EAAK+B,GAE5D,IAAIG,EAAQT,EAAQU,oBAAoBnC,EAAK+B,EAAI9B,EAAM,GAAGG,OAAQ,GASlE,OAPI8B,IAAUA,EAAME,gBACZP,EACAK,EAAQzD,KAAK4D,gBAAgBZ,EAASzB,GAClB,OAAb0B,IACPQ,EAAQ,OAGTA,EAGX,GAAkB,cAAdR,IAGAzB,EAAQN,EAAKM,MAAMxB,KAAKyC,oBACjB,CACHa,EAAI9B,EAAM+B,MAAQ/B,EAAM,GAAGG,OAE/B,OAAIH,EAAM,GACCxB,KAAK6D,oBAAoBb,EAASxB,EAAM,GAAID,EAAK+B,GAErDN,EAAQU,oBAAoBnC,EAAK+B,GAAI,KAIpDtD,KAAK4D,gBAAkB,SAASZ,EAASzB,GAQrC,IAPA,IAAIL,EAAO8B,EAAQvB,QAAQF,GACvBuC,EAAc5C,EAAK6C,OAAO,MAC1BC,EAAWzC,EACX0C,EAAc/C,EAAKS,OAEnBuC,EADJ3C,GAAY,EAER4C,EAASnB,EAAQoB,cACZ7C,EAAM4C,GAAQ,CAEnB,IAAIrC,GADJZ,EAAO8B,EAAQvB,QAAQF,IACLwC,OAAO,MACzB,IAAgB,IAAZjC,EAAJ,CAEA,GAAKgC,EAAchC,EACf,MACJ,IAAIuC,EAAWrE,KAAKmD,mBAAmBH,EAAS,MAAOzB,GAEvD,GAAI8C,EAAU,CACV,GAAIA,EAAS7B,MAAMjB,KAAOyC,EACtB,MACG,GAAIK,EAASV,cAChBpC,EAAM8C,EAAS3B,IAAInB,SAChB,GAAIuC,GAAehC,EACtB,MAGRoC,EAAS3C,GAGb,OAAO,IAAIR,EAAMiD,EAAUC,EAAaC,EAAQlB,EAAQvB,QAAQyC,GAAQvC,SAE5E3B,KAAKqD,sBAAwB,SAASL,EAAS9B,EAAMK,GAOjD,IANA,IAAI0C,EAAc/C,EAAK6C,OAAO,QAC1BI,EAASnB,EAAQoB,YACjBJ,EAAWzC,EAEX+C,EAAK,uCACLC,EAAQ,IACHhD,EAAM4C,GAAQ,CACnBjD,EAAO8B,EAAQvB,QAAQF,GACvB,IAAIiD,EAAIF,EAAGG,KAAKvD,GAChB,GAAKsD,IACDA,EAAE,GAAID,IACLA,KAEAA,GAAO,MAIhB,GADahD,EACAyC,EACT,OAAO,IAAIjD,EAAMiD,EAAUC,EAFlB1C,EAEuCL,EAAKS,UAI9DnB,KAAK2B,EAASF,cAIjBzC,IAAIC,OAAO,iBAAiB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,iCAAiC,kCAAkC,4BAA4B,4BAA4B,SAASC,EAASC,EAASC,GAC9O,aAEA,IAAIC,EAAMH,EAAQ,cACdgF,EAAWhF,EAAQ,UAAUiF,KAC7BC,EAAiBlF,EAAQ,2BAA2Ba,oBACpDS,EAAuBtB,EAAQ,4BAA4BsB,qBAC3D6D,EAAkBnF,EAAQ,sBAAsBmF,gBAChDC,EAAiBpF,EAAQ,oBAAoByC,SAE7CwC,EAAO,WACP3E,KAAK4E,eAAiBA,EACtB5E,KAAK+E,SAAW,IAAI/D,EACpBhB,KAAKgF,WAAa,IAAIH,EACtB7E,KAAKiF,aAAe,IAAIH,GAE5BjF,EAAIS,SAASqE,EAAMD,GAEnB,WACI1E,KAAKkF,iBAAmB,KACxBlF,KAAKmF,aAAe,CAAC3C,MAAO,KAAME,IAAK,MAEvC1C,KAAKiB,aAAe,SAASmE,EAAOlE,EAAMC,GACtC,OAAOnB,KAAK+E,SAAS9D,aAAaC,EAAMC,IAG5CnB,KAAKqB,YAAc,SAAS+D,EAAO9D,EAAKC,GACpCvB,KAAK+E,SAAS1D,YAAYC,EAAKC,IAGnCvB,KAAKqF,IAAM,kBACZ7E,KAAKmE,EAAK1C,WAEbtC,EAAQgF,KAAOA,KAEKnF,IAAIE,QAAQ,CAAC,mBAAmB,SAAS8E,GAC0B5E,IAC3DA,EAAOD,QAAU6E,Q","file":"static/js/71.c307abaf.chunk.js","sourcesContent":["ace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n});\n\nace.define(\"ace/mode/json5_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/json_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\n\nvar Json5HighlightRules = function() {\n    JsonHighlightRules.call(this);\n\n    var startRules = [{\n        token : \"variable\",\n        regex : /[a-zA-Z$_\\u00a1-\\uffff][\\w$\\u00a1-\\uffff]*\\s*(?=:)/\n    }, {\n        token : \"variable\",\n        regex : /['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']\\s*(?=:)/\n    }, {\n        token : \"constant.language.boolean\",\n        regex : /(?:null)\\b/\n    }, {\n        token : \"string\",\n        regex : /'/,\n        next  : [{\n            token : \"constant.language.escape\",\n            regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\/bfnrt]|$)/,\n            consumeLineEnd  : true\n        }, {\n            token : \"string\",\n            regex : /'|$/,\n            next  : \"start\"\n        }, {\n            defaultToken : \"string\"\n        }]\n    }, {\n        token : \"string\",\n        regex : /\"(?![^\"]*\":)/,\n        next  : [{\n            token : \"constant.language.escape\",\n            regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\/bfnrt]|$)/,\n            consumeLineEnd  : true\n        }, {\n            token : \"string\",\n            regex : /\"|$/,\n            next  : \"start\"\n        }, {\n            defaultToken : \"string\"\n        }]\n    }, {\n        token : \"constant.numeric\",\n        regex : /[+-]?(?:Infinity|NaN)\\b/\n    }];\n\n    for (var key in this.$rules)\n        this.$rules[key].unshift.apply(this.$rules[key], startRules);\n\n    this.normalizeRules();\n};\n\noop.inherits(Json5HighlightRules, JsonHighlightRules);\n\nexports.Json5HighlightRules = Json5HighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/json5\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/json5_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./json5_highlight_rules\").Json5HighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/json5\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/json5\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}