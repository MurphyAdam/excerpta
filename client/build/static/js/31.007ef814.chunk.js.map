{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-diff.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DiffHighlightRules","this","$rules","regex","token","defaultToken","caseInsensitive","inherits","BaseFoldMode","FoldMode","Range","levels","flag","regExpList","foldingStartMarker","RegExp","join","getFoldWidgetRange","session","foldStyle","row","line","getLine","start","column","length","regList","i","re","slice","test","l","getLength","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id","snippetFileId","m"],"mappings":"2FAAAA,gBAAIC,OAAO,gCAAgC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAASC,EAASC,GACpJ,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAqB,WAErBC,KAAKC,OAAS,CACV,MAAU,CAAC,CACHC,MAAO,kCACPC,MAAO,wCACP,KAAQ,WACT,CACCD,MAAO,8BACPC,MAAO,CACH,WACA,mBACA,WACA,oBAEL,CACCD,MAAO,8CACPC,MAAO,CACH,mBACA,oCACA,oBACA,mBACA,oCACA,WAEJ,KAAQ,SACT,CACCD,MAAO,gCACPC,MAAO,CACH,mBACA,aAEL,CACCD,MAAO,uBACPC,MAAO,CACH,mBACA,OACA,YAEL,CACCD,MAAO,wBACPC,MAAO,CACH,mBACA,SACA,YAEL,CACCD,MAAO,mCACPC,MAAO,CAAC,WAAY,WAAY,UAAW,aAC5C,CACCD,MAAO,YACPC,MAAO,YACR,CACCD,MAAO,SACPC,MAAO,QACR,CACCD,MAAO,QACPC,MAAO,WACR,CACCC,aAAc,YACdC,iBAAiB,MAMjCR,EAAIS,SAASP,EAAoBD,GAEjCH,EAAQI,mBAAqBA,KAG7BP,IAAIC,OAAO,wBAAwB,CAAC,UAAU,UAAU,SAAS,cAAc,6BAA6B,cAAc,SAASC,EAASC,EAASC,GACrJ,aAEA,IAAIC,EAAMH,EAAQ,iBACda,EAAeb,EAAQ,eAAec,SACtCC,EAAQf,EAAQ,eAAee,MAE/BD,EAAWb,EAAQa,SAAW,SAASE,EAAQC,GAClDX,KAAKY,WAAaF,EAClBV,KAAKW,KAAOA,EACZX,KAAKa,mBAAqBC,OAAO,KAAOJ,EAAOK,KAAK,KAAO,IAAKf,KAAKW,OAEtEd,EAAIS,SAASE,EAAUD,GAEvB,WACIP,KAAKgB,mBAAqB,SAASC,EAASC,EAAWC,GAKnD,IAJA,IAAIC,EAAOH,EAAQI,QAAQF,GACvBG,EAAQ,CAACH,IAAKA,EAAKI,OAAQH,EAAKI,QAEhCC,EAAUzB,KAAKY,WACVc,EAAI,EAAGA,GAAKD,EAAQD,OAAQE,IAAK,CACtC,IAAIC,EAAKb,OAAO,KAAOW,EAAQG,MAAM,EAAGF,GAAGX,KAAK,KAAO,IAAKf,KAAKW,MACjE,GAAIgB,EAAGE,KAAKT,GACR,MAGR,IAAK,IAAIU,EAAIb,EAAQc,cAAeZ,EAAMW,IACtCV,EAAOH,EAAQI,QAAQF,IACnBQ,EAAGE,KAAKT,MAGhB,GAAID,GAAOG,EAAMH,IAAM,EAEvB,OAAO,IAAIV,EAAMa,EAAMH,IAAKG,EAAMC,OAAQJ,EAAM,EAAGC,EAAKI,UAG7DQ,KAAKxB,EAASyB,cAIjBzC,IAAIC,OAAO,gBAAgB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,gCAAgC,0BAA0B,SAASC,EAASC,EAASC,GAC5K,aAEA,IAAIC,EAAMH,EAAQ,cACdwC,EAAWxC,EAAQ,UAAUyC,KAC7BC,EAAiB1C,EAAQ,0BAA0BK,mBACnDS,EAAWd,EAAQ,kBAAkBc,SAErC2B,EAAO,WACPnC,KAAKoC,eAAiBA,EACtBpC,KAAKqC,aAAe,IAAI7B,EAAS,CAAC,OAAQ,aAAc,MAE5DX,EAAIS,SAAS6B,EAAMD,GAEnB,WAEIlC,KAAKsC,IAAM,gBACXtC,KAAKuC,cAAgB,qBACtBP,KAAKG,EAAKF,WAEbtC,EAAQwC,KAAOA,KAGK3C,IAAIE,QAAQ,CAAC,kBAAkB,SAAS8C,GAC2B5C,IAC3DA,EAAOD,QAAU6C,Q","file":"static/js/31.007ef814.chunk.js","sourcesContent":["ace.define(\"ace/mode/diff_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DiffHighlightRules = function() {\n\n    this.$rules = {\n        \"start\" : [{\n                regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n                token: \"punctuation.definition.separator.diff\",\n                \"name\": \"keyword\"\n            }, { //diff.range.unified\n                regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n                token: [\n                    \"constant\",\n                    \"constant.numeric\",\n                    \"constant\",\n                    \"comment.doc.tag\"\n                ]\n            }, { //diff.range.normal\n                regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n                token: [\n                    \"constant.numeric\",\n                    \"punctuation.definition.range.diff\",\n                    \"constant.function\",\n                    \"constant.numeric\",\n                    \"punctuation.definition.range.diff\",\n                    \"invalid\"\n                ],\n                \"name\": \"meta.\"\n            }, {\n                regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n                token: [\n                    \"constant.numeric\",\n                    \"meta.tag\"\n                ]\n            }, { // added\n                regex: \"^([!+>])(.*?)(\\\\s*)$\",\n                token: [\n                    \"support.constant\",\n                    \"text\",\n                    \"invalid\"\n                ]\n            }, { // removed\n                regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n                token: [\n                    \"support.function\",\n                    \"string\",\n                    \"invalid\"\n                ]\n            }, {\n                regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n                token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n            }, {\n                regex: \"^Index.+$\",\n                token: \"variable\"\n            }, {\n                regex: \"^\\\\s+$\",\n                token: \"text\"\n            }, {\n                regex: \"\\\\s*$\",\n                token: \"invalid\"\n            }, {\n                defaultToken: \"invisible\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\n\noop.inherits(DiffHighlightRules, TextHighlightRules);\n\nexports.DiffHighlightRules = DiffHighlightRules;\n});\n\nace.define(\"ace/mode/folding/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function(levels, flag) {\n\tthis.regExpList = levels;\n\tthis.flag = flag;\n\tthis.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var start = {row: row, column: line.length};\n\n        var regList = this.regExpList;\n        for (var i = 1; i <= regList.length; i++) {\n            var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n            if (re.test(line))\n                break;\n        }\n\n        for (var l = session.getLength(); ++row < l; ) {\n            line = session.getLine(row);\n            if (re.test(line))\n                break;\n        }\n        if (row == start.row + 1)\n            return;\n        return new Range(start.row, start.column, row - 1, line.length);\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/diff_highlight_rules\",\"ace/mode/folding/diff\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\nvar FoldMode = require(\"./folding/diff\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.$id = \"ace/mode/diff\";\n    this.snippetFileId = \"ace/snippets/diff\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/diff\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}