{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-logtalk.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","LogtalkHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","todo","caseInsensitive","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","Tokenizer","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/84.61a84c53.chunk.js","sourcesContent":["ace.define(\"ace/mode/logtalk_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LogtalkHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: 'punctuation.definition.comment.logtalk',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.logtalk',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.logtalk' } ] },\n         { todo: 'fix grouping',\n           token: \n            [ 'comment.line.percentage.logtalk',\n              'punctuation.definition.comment.logtalk' ],\n           regex: '%.*$\\\\n?' },\n         { todo: 'fix grouping',\n           token: \n            [ 'storage.type.opening.logtalk',\n              'punctuation.definition.storage.type.logtalk' ],\n           regex: ':-\\\\s(?:object|protocol|category|module)(?=[(])' },\n         { todo: 'fix grouping',\n           token: \n            [ 'storage.type.closing.logtalk',\n              'punctuation.definition.storage.type.logtalk' ],\n           regex: ':-\\\\send_(?:object|protocol|category)(?=[.])' },\n         { caseInsensitive: false,\n           token: 'storage.type.relations.logtalk',\n           regex: '\\\\b(?:complements|extends|i(?:nstantiates|mp(?:orts|lements))|specializes)(?=[(])' },\n         { caseInsensitive: false,\n           todo: 'fix grouping',\n           token: \n            [ 'storage.modifier.others.logtalk',\n              'punctuation.definition.storage.modifier.logtalk' ],\n           regex: ':-\\\\s(?:e(?:lse|ndif)|built_in|dynamic|synchronized|threaded)(?=[.])' },\n         { caseInsensitive: false,\n           todo: 'fix grouping',\n           token: \n            [ 'storage.modifier.others.logtalk',\n              'punctuation.definition.storage.modifier.logtalk' ],\n           regex: ':-\\\\s(?:c(?:alls|oinductive)|e(?:lif|n(?:coding|sure_loaded)|xport)|i(?:f|n(?:clude|itialization|fo))|reexport|set_(?:logtalk|prolog)_flag|uses)(?=[(])' },\n         { caseInsensitive: false,\n           todo: 'fix grouping',\n           token: \n            [ 'storage.modifier.others.logtalk',\n              'punctuation.definition.storage.modifier.logtalk' ],\n           regex: ':-\\\\s(?:alias|info|d(?:ynamic|iscontiguous)|m(?:eta_(?:non_terminal|predicate)|ode|ultifile)|p(?:ublic|r(?:otected|ivate))|op|use(?:s|_module)|synchronized)(?=[(])' },\n         { token: 'keyword.operator.message-sending.logtalk',\n           regex: '(:|::|\\\\^\\\\^)' },\n         { token: 'keyword.operator.external-call.logtalk',\n           regex: '([{}])' },\n         { token: 'keyword.operator.mode.logtalk', regex: '(\\\\?|@)' },\n         { token: 'keyword.operator.comparison.term.logtalk',\n           regex: '(@=<|@<|@>|@>=|==|\\\\\\\\==)' },\n         { token: 'keyword.operator.comparison.arithmetic.logtalk',\n           regex: '(=<|<|>|>=|=:=|=\\\\\\\\=)' },\n         { token: 'keyword.operator.bitwise.logtalk',\n           regex: '(<<|>>|/\\\\\\\\|\\\\\\\\/|\\\\\\\\)' },\n         { token: 'keyword.operator.evaluable.logtalk',\n           regex: '\\\\b(?:e|pi|div|mod|rem)\\\\b(?![-!(^~])' },\n         { token: 'keyword.operator.evaluable.logtalk',\n           regex: '(\\\\*\\\\*|\\\\+|-|\\\\*|/|//)' },\n         { token: 'keyword.operator.misc.logtalk',\n           regex: '(:-|!|\\\\\\\\+|,|;|-->|->|=|\\\\=|\\\\.|=\\\\.\\\\.|\\\\^|\\\\bas\\\\b|\\\\bis\\\\b)' },\n         { caseInsensitive: false,\n           token: 'support.function.evaluable.logtalk',\n           regex: '\\\\b(a(bs|cos|sin|tan|tan2)|c(eiling|os)|div|exp|flo(at(_(integer|fractional)_part)?|or)|log|m(ax|in|od)|r(em|ound)|s(i(n|gn)|qrt)|t(an|runcate)|xor)(?=[(])' },\n         { token: 'support.function.control.logtalk',\n           regex: '\\\\b(?:true|fa(?:il|lse)|repeat|(?:instantiation|system)_error)\\\\b(?![-!(^~])' },\n         { token: 'support.function.control.logtalk',\n           regex: '\\\\b((?:type|domain|existence|permission|representation|evaluation|resource|syntax)_error)(?=[(])' },\n         { token: 'support.function.control.logtalk',\n           regex: '\\\\b(?:ca(?:ll|tch)|ignore|throw|once)(?=[(])' },\n         { token: 'support.function.chars-and-bytes-io.logtalk',\n           regex: '\\\\b(?:(?:get|p(?:eek|ut))_(c(?:har|ode)|byte)|nl)(?=[(])' },\n         { token: 'support.function.chars-and-bytes-io.logtalk',\n           regex: '\\\\bnl\\\\b' },\n         { token: 'support.function.atom-term-processing.logtalk',\n           regex: '\\\\b(?:atom_(?:length|c(?:hars|o(?:ncat|des)))|sub_atom|char_code|number_c(?:har|ode)s)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.term-testing.logtalk',\n           regex: '\\\\b(?:var|atom(ic)?|integer|float|c(?:allable|ompound)|n(?:onvar|umber)|ground|acyclic_term)(?=[(])' },\n         { token: 'support.function.term-comparison.logtalk',\n           regex: '\\\\b(compare)(?=[(])' },\n         { token: 'support.function.term-io.logtalk',\n           regex: '\\\\b(?:read(_term)?|write(?:q|_(?:canonical|term))?|(current_)?(?:char_conversion|op))(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.term-creation-and-decomposition.logtalk',\n           regex: '\\\\b(arg|copy_term|functor|numbervars|term_variables)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.term-unification.logtalk',\n           regex: '\\\\b(subsumes_term|unify_with_occurs_check)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.stream-selection-and-control.logtalk',\n           regex: '\\\\b(?:(?:se|curren)t_(?:in|out)put|open|close|flush_output|stream_property|at_end_of_stream|set_stream_position)(?=[(])' },\n         { token: 'support.function.stream-selection-and-control.logtalk',\n           regex: '\\\\b(?:flush_output|at_end_of_stream)\\\\b' },\n         { token: 'support.function.prolog-flags.logtalk',\n           regex: '\\\\b((?:se|curren)t_prolog_flag)(?=[(])' },\n         { token: 'support.function.compiling-and-loading.logtalk',\n           regex: '\\\\b(logtalk_(?:compile|l(?:ibrary_path|oad|oad_context)|make(_target_action)?))(?=[(])' },\n         { token: 'support.function.compiling-and-loading.logtalk',\n           regex: '\\\\b(logtalk_make)\\\\b' },\n         { caseInsensitive: false,\n           token: 'support.function.event-handling.logtalk',\n           regex: '\\\\b(?:(?:abolish|define)_events|current_event)(?=[(])' },\n         { token: 'support.function.implementation-defined-hooks.logtalk',\n           regex: '\\\\b(?:(?:create|current|set)_logtalk_flag|halt)(?=[(])' },\n         { token: 'support.function.implementation-defined-hooks.logtalk',\n           regex: '\\\\b(halt)\\\\b' },\n         { token: 'support.function.sorting.logtalk',\n           regex: '\\\\b((key)?(sort))(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.entity-creation-and-abolishing.logtalk',\n           regex: '\\\\b((c(?:reate|urrent)|abolish)_(?:object|protocol|category))(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.reflection.logtalk',\n           regex: '\\\\b((object|protocol|category)_property|co(mplements_object|nforms_to_protocol)|extends_(object|protocol|category)|imp(orts_category|lements_protocol)|(instantiat|specializ)es_class)(?=[(])' },\n         { token: 'support.function.logtalk',\n           regex: '\\\\b((?:for|retract)all)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.execution-context.logtalk',\n           regex: '\\\\b(?:context|parameter|se(?:lf|nder)|this)(?=[(])' },\n         { token: 'support.function.database.logtalk',\n           regex: '\\\\b(?:a(?:bolish|ssert(?:a|z))|clause|retract(all)?)(?=[(])' },\n         { token: 'support.function.all-solutions.logtalk',\n           regex: '\\\\b((?:bag|set)of|f(?:ind|or)all)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.multi-threading.logtalk',\n           regex: '\\\\b(threaded(_(call|once|ignore|exit|peek|wait|notify))?)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.engines.logtalk',\n           regex: '\\\\b(threaded_engine(_(create|destroy|self|next(?:_reified)?|yield|post|fetch))?)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.reflection.logtalk',\n           regex: '\\\\b(?:current_predicate|predicate_property)(?=[(])' },\n         { token: 'support.function.event-handler.logtalk',\n           regex: '\\\\b(?:before|after)(?=[(])' },\n         { token: 'support.function.message-forwarding-handler.logtalk',\n           regex: '\\\\b(forward)(?=[(])' },\n         { token: 'support.function.grammar-rule.logtalk',\n           regex: '\\\\b(?:expand_(?:goal|term)|(?:goal|term)_expansion|phrase)(?=[(])' },\n         { token: 'punctuation.definition.string.begin.logtalk',\n           regex: '\\'',\n           push: \n            [ { token: 'constant.character.escape.logtalk',\n                regex: '\\\\\\\\([\\\\\\\\abfnrtv\"\\']|(x[a-fA-F0-9]+|[0-7]+)\\\\\\\\)' },\n              { token: 'punctuation.definition.string.end.logtalk',\n                regex: '\\'',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.single.logtalk' } ] },\n         { token: 'punctuation.definition.string.begin.logtalk',\n           regex: '\"',\n           push: \n            [ { token: 'constant.character.escape.logtalk', regex: '\\\\\\\\.' },\n              { token: 'punctuation.definition.string.end.logtalk',\n                regex: '\"',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.double.logtalk' } ] },\n         { token: 'constant.numeric.logtalk',\n           regex: '\\\\b(0b[0-1]+|0o[0-7]+|0x[0-9a-fA-F]+)\\\\b' },\n         { token: 'constant.numeric.logtalk',\n           regex: '\\\\b(0\\'\\\\\\\\.|0\\'.|0\\'\\'|0\\'\")' },\n         { token: 'constant.numeric.logtalk',\n           regex: '\\\\b(\\\\d+\\\\.?\\\\d*((e|E)(\\\\+|-)?\\\\d+)?)\\\\b' },\n         { token: 'variable.other.logtalk',\n           regex: '\\\\b([A-Z_][A-Za-z0-9_]*)\\\\b' } ] };\n    \n    this.normalizeRules();\n};\n\noop.inherits(LogtalkHighlightRules, TextHighlightRules);\n\nexports.LogtalkHighlightRules = LogtalkHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/logtalk\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/tokenizer\",\"ace/mode/logtalk_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar Tokenizer = require(\"../tokenizer\").Tokenizer;\nvar LogtalkHighlightRules = require(\"./logtalk_highlight_rules\").LogtalkHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = LogtalkHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"%\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/logtalk\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/logtalk\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}