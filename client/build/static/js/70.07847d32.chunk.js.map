{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-json.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","JsonHighlightRules","this","$rules","token","regex","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","WorkerClient","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"mappings":"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","file":"static/js/70.07847d32.chunk.js","sourcesContent":["ace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/json\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/json_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/worker/worker_client\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/json_worker\", \"JsonWorker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n\n\n    this.$id = \"ace/mode/json\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/json\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}