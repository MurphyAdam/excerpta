{"version":3,"sources":["../node_modules/ace-builds/src-noconflict/mode-tex.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","TexHighlightRules","textClass","this","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","suppressHighlighting","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","allowAutoInsert","$id","snippetFileId","m"],"mappings":"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","file":"static/js/152.da94b7eb.chunk.js","sourcesContent":["ace.define(\"ace/mode/tex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar TexHighlightRules = function(textClass) {\n\n    if (!textClass)\n        textClass = \"text\";\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"%.*$\"\n            }, {\n                token : textClass, // non-command\n                regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n            }, {\n                token : \"keyword\", // command\n                regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\n               next : \"nospell\"\n            }, {\n                token : \"keyword\", // command\n                regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n            }, {\n               token : \"paren.keyword.operator\",\n                regex : \"[[({]\"\n            }, {\n               token : \"paren.keyword.operator\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : textClass,\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"nospell\" : [\n           {\n               token : \"comment\",\n               regex : \"%.*$\",\n               next : \"start\"\n           }, {\n               token : \"nospell.\" + textClass, // non-command\n               regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n           }, {\n               token : \"keyword\", // command\n               regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\n           }, {\n               token : \"keyword\", // command\n               regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n               next : \"start\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"[[({]\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"[\\\\])]\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"}\",\n               next : \"start\"\n           }, {\n               token : \"nospell.\" + textClass,\n               regex : \"\\\\s+\"\n           }, {\n               token : \"nospell.\" + textClass,\n               regex : \"\\\\w+\"\n           }\n        ]\n    };\n};\n\noop.inherits(TexHighlightRules, TextHighlightRules);\n\nexports.TexHighlightRules = TexHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/tex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/tex_highlight_rules\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar TexHighlightRules = require(\"./tex_highlight_rules\").TexHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function(suppressHighlighting) {\n    if (suppressHighlighting)\n        this.HighlightRules = TextHighlightRules;\n    else\n        this.HighlightRules = TexHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n   this.lineCommentStart = \"%\";\n   this.getNextLineIndent = function(state, line, tab) {\n      return this.$getIndent(line);\n   };\n\n   this.allowAutoInsert = function() {\n      return false;\n   };\n    this.$id = \"ace/mode/tex\";\n    this.snippetFileId = \"ace/snippets/tex\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/tex\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"sourceRoot":""}